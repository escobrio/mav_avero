<?xml version="1.0"?>
<!-- This launch file is a replica of stork_core_sim.launch applied to our avero drone -->

<launch>
  <!-- ************************ -->
  <!-- ****** Parameters ****** -->
  <!-- ************************ -->

  <!-- vehicle config -->
  <arg name="mav_name" default="stork" />
  <arg name="add_manipulator" default="false" />

  <!-- simulation config -->
  <arg name="model" default="$(find mav_omav)/launch/simulation/urdf/stork.xacro" />
<!--   <arg name="model" default="$(find avero_sim)/urdf/drone.xacro" />
 -->  <arg name="world_name" default="force_trajectories" />
  <arg name="debug" default="false" />
  <arg name="gui" default="true" />
  <arg name="paused" default="false" />
  <arg name="verbose" default="false" />
  <arg name="use_normal_estimation" default="false" />
  <arg name="use_rviz" default="false" />

  <arg name="enable_logging" default="false" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="enable_ground_truth" default="true" />

  <arg name="use_hook" default="false" />
  <arg name="vehicle_config" default="hook" if="$(arg use_hook)" />
  <arg name="vehicle_config" default="battery" unless="$(arg use_hook)" />

  <arg name="network_path" default="" />
  <arg name="door_handle_topic" default="" />


  <!-- controller config -->
  <!-- control module options:
  estimator:            estimates external disturbances on the platform
  wrench_sensor_filter: filters force/torques sensor measurements
  impedance:            impedance control module
  allocation:           allocates wrench to actuator commands -->
  <arg name="control_modules" default="[estimator, impedance, jerk_allocation]" />
  <arg name="ctrl-sliders" default="true" />
  <arg name="waypoint_file_name" value="published_waypoints.yaml" />

  <arg name="msf_transform_topic" default="odometry_sensor/transform" />
  <arg name="msf_imu_topic" default="imu" />
  <arg name="odometry_topic_msf" default="ground_truth/odometry" />
  <!-- Options: odometry_sensor, ground_truth, msf_core -->
  <arg name="wrench_sensor_topic" default="wrench_vector" />
  <arg name="world_frame_name" default="world" />

  <arg name="use_touch_planner" default="false" />


  <arg name="dir_param_files" value="$(find mav_omav)/config/$(arg mav_name)" />
  <arg name="rviz_file" default="$(arg dir_param_files)/simulation/$(arg mav_name)_inspection.rviz" />


  <!-- ************************ -->
  <!-- ****** Simulation ****** -->
  <!-- ************************ -->

  <!-- ***** GAZEBO ***** -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models:$(find mav_omav)/launch/simulation" />
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find mav_omav)/launch/simulation/worlds/$(arg world_name).world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)" />
  </include>

  <!-- ***** Spawn MAV ***** -->
  <!-- Send the robot XML to param server. -->
  <param name="robot_description" command="
    $(find xacro)/xacro --inorder '$(arg model)' enable_logging:=$(arg enable_logging) enable_ground_truth:=$(arg enable_ground_truth) log_file:=$(arg log_file) wait_to_record_bag:=false mav_name:=$(arg mav_name) namespace:=$(arg mav_name) use_hook:=$(arg use_hook)" />
<!--   <param name="tf_prefix" type="string" value="$(optenv ROS_NAMESPACE)" />
 -->

  <!-- Push robot_description to factory and spawn robot in gazebo. -->
  <node name="spawn_$(arg mav_name)" pkg="gazebo_ros" type="spawn_model" args="-param robot_description
         -urdf
         -x 0
         -y 0
         -z 0.5
         -Y -1.570796
         -model $(arg mav_name)" respawn="false" output="screen">
  </node>

</launch>
