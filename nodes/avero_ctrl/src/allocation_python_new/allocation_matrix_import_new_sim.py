#!/usr/bin/env python3 

import numpy as np

def get_allocation_matrix(k_f, phi_1_1, phi_1_2, phi_2_1, phi_2_2, phi_3_1, phi_3_2, omega_1, omega_2, omega_3): 
    # k_f = 6.0 * 10**-5 
    # phi_1_1 = 0.0 
    # phi_1_2 = 0.0
    # phi_2_1 = 0.0
    # phi_2_2 = 0.0
    # phi_3_1 = 0.0
    # phi_3_2 = 0.0
    # omega_1 = 0.0
    # omega_2 = 0.0
    # omega_3 = 0.0
    # x_1_val = 0.187150672078
    # y_1_val = -0.321475774049
    # z_1_val = 0.0
    # x_2_val = -0.188550204038
    # y_2_val = 0.330919086933
    # z_2_val = 0.0
    # x_3_val = -0.373928427696
    # y_3_val = 0.0
    # z_3_val = 0.0


    A = np.array([
                [k_f*omega_1*(1.0*np.sin(phi_1_1)*np.cos(phi_1_2) + 1.0*np.sin(phi_1_1) + 1.41421356237309*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_2*(-0.5*np.sin(phi_2_1)*np.cos(phi_2_2) - 0.5*np.sin(phi_2_1) - 0.707106781186547*np.sin(phi_2_2)*np.cos(phi_2_1) - 0.866025403784438*np.cos(phi_2_2) + 0.866025403784439), k_f*omega_3*(-0.5*np.sin(phi_3_1)*np.cos(phi_3_2) - 0.5*np.sin(phi_3_1) - 0.707106781186547*np.sin(phi_3_2)*np.cos(phi_3_1) + 0.866025403784438*np.cos(phi_3_2) - 0.866025403784439), k_f*omega_1**2*(-0.707106781186547*np.sin(phi_1_1)*np.sin(phi_1_2) + 0.5*np.cos(phi_1_1)*np.cos(phi_1_2) + 0.5*np.cos(phi_1_1)), k_f*omega_1**2*(-0.5*np.sin(phi_1_1)*np.sin(phi_1_2) + 0.707106781186547*np.cos(phi_1_1)*np.cos(phi_1_2)), k_f*omega_2**2*(0.353553390593274*np.sin(phi_2_1)*np.sin(phi_2_2) - 0.25*np.cos(phi_2_1)*np.cos(phi_2_2) - 0.25*np.cos(phi_2_1)), k_f*omega_2**2*(0.25*np.sin(phi_2_1)*np.sin(phi_2_2) + 0.433012701892219*np.sin(phi_2_2) - 0.353553390593274*np.cos(phi_2_1)*np.cos(phi_2_2)), k_f*omega_3**2*(0.353553390593274*np.sin(phi_3_1)*np.sin(phi_3_2) - 0.25*np.cos(phi_3_1)*np.cos(phi_3_2) - 0.25*np.cos(phi_3_1)), k_f*omega_3**2*(0.25*np.sin(phi_3_1)*np.sin(phi_3_2) - 0.433012701892219*np.sin(phi_3_2) - 0.353553390593274*np.cos(phi_3_1)*np.cos(phi_3_2))],
                [k_f*omega_1*(1.0*np.cos(phi_1_2) - 1.0), k_f*omega_2*(0.866025403784439*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.866025403784439*np.sin(phi_2_1) + 1.22474487139159*np.sin(phi_2_2)*np.cos(phi_2_1) - 0.5*np.cos(phi_2_2) + 0.5), k_f*omega_3*(-0.866025403784439*np.sin(phi_3_1)*np.cos(phi_3_2) - 0.866025403784439*np.sin(phi_3_1) - 1.22474487139159*np.sin(phi_3_2)*np.cos(phi_3_1) - 0.5*np.cos(phi_3_2) + 0.5), 0, -0.5*k_f*omega_1**2*np.sin(phi_1_2), k_f*omega_2**2*(-0.612372435695794*np.sin(phi_2_1)*np.sin(phi_2_2) + 0.433012701892219*np.cos(phi_2_1)*np.cos(phi_2_2) + 0.433012701892219*np.cos(phi_2_1)), k_f*omega_2**2*(-0.433012701892219*np.sin(phi_2_1)*np.sin(phi_2_2) + 0.25*np.sin(phi_2_2) + 0.612372435695794*np.cos(phi_2_1)*np.cos(phi_2_2)), k_f*omega_3**2*(0.612372435695794*np.sin(phi_3_1)*np.sin(phi_3_2) - 0.433012701892219*np.cos(phi_3_1)*np.cos(phi_3_2) - 0.433012701892219*np.cos(phi_3_1)), k_f*omega_3**2*(0.433012701892219*np.sin(phi_3_1)*np.sin(phi_3_2) + 0.25*np.sin(phi_3_2) - 0.612372435695794*np.cos(phi_3_1)*np.cos(phi_3_2))],
                [k_f*omega_1*(1.41421356237309*np.sin(phi_1_1)*np.sin(phi_1_2) - 1.0*np.cos(phi_1_1)*np.cos(phi_1_2) - 1.0*np.cos(phi_1_1)), k_f*omega_2*(1.41421356237309*np.sin(phi_2_1)*np.sin(phi_2_2) - 1.0*np.cos(phi_2_1)*np.cos(phi_2_2) - 1.0*np.cos(phi_2_1)), k_f*omega_3*(1.41421356237309*np.sin(phi_3_1)*np.sin(phi_3_2) - 1.0*np.cos(phi_3_1)*np.cos(phi_3_2) - 1.0*np.cos(phi_3_1)), k_f*omega_1**2*(0.5*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.5*np.sin(phi_1_1) + 0.707106781186547*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_1**2*(0.707106781186547*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.5*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_2**2*(0.5*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.5*np.sin(phi_2_1) + 0.707106781186547*np.sin(phi_2_2)*np.cos(phi_2_1)), k_f*omega_2**2*(0.707106781186547*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.5*np.sin(phi_2_2)*np.cos(phi_2_1)), k_f*omega_3**2*(0.5*np.sin(phi_3_1)*np.cos(phi_3_2) + 0.5*np.sin(phi_3_1) + 0.707106781186547*np.sin(phi_3_2)*np.cos(phi_3_1)), k_f*omega_3**2*(0.707106781186547*np.sin(phi_3_1)*np.cos(phi_3_2) + 0.5*np.sin(phi_3_2)*np.cos(phi_3_1))],
                [k_f*omega_1*(0.0833101350462922*np.sin(phi_1_1)*np.sin(phi_1_2) - 0.0368956*np.cos(phi_1_1)*np.cos(phi_1_2) - 0.0809227228656005*np.cos(phi_1_1)), k_f*omega_2*(1.38777878078145e-17*np.sin(phi_2_1)*np.sin(phi_2_2)**2*np.cos(phi_2_1) + 0.356086274354612*np.sin(phi_2_1)*np.sin(phi_2_2) + 0.0269609964658858*np.sin(phi_2_2) - 0.2627978*np.cos(phi_2_1)*np.cos(phi_2_2) - 0.2407842385672*np.cos(phi_2_1)), k_f*omega_3*(-1.38777878078145e-17*np.sin(phi_3_1)*np.sin(phi_3_2)**2*np.cos(phi_3_1) - 0.439396550822261*np.sin(phi_3_1)*np.sin(phi_3_2) - 0.0269609964658858*np.sin(phi_3_2) + 0.2996935*np.cos(phi_3_1)*np.cos(phi_3_2) + 0.3217070614328*np.cos(phi_3_1)), k_f*omega_1**2*(0.0184478*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.0404613614328003*np.sin(phi_1_1) + 0.0416550675231461*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_1**2*(0.0416550675231461*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.0184478*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_2**2*(-1.38777878078145e-17*np.sin(phi_2_1)**2*np.sin(phi_2_2)**2 + 0.1313989*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.1203921192836*np.sin(phi_2_1) + 6.93889390390723e-18*np.sin(phi_2_2)**2 + 0.178043137177306*np.sin(phi_2_2)*np.cos(phi_2_1)), k_f*omega_2**2*(0.178043137177306*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.1313989*np.sin(phi_2_2)*np.cos(phi_2_1) + 0.0134804982329429*np.cos(phi_2_2)), k_f*omega_3**2*(1.38777878078145e-17*np.sin(phi_3_1)**2*np.sin(phi_3_2)**2 - 0.14984675*np.sin(phi_3_1)*np.cos(phi_3_2) - 0.1608535307164*np.sin(phi_3_1) - 6.93889390390723e-18*np.sin(phi_3_2)**2 - 0.21969827541113*np.sin(phi_3_2)*np.cos(phi_3_1)), k_f*omega_3**2*(-0.0349257627055652*np.sin(phi_3_1 - phi_3_2) - 0.184772512705565*np.sin(phi_3_1 + phi_3_2) - 0.0134804982329429*np.cos(phi_3_2) + 2.16840434497101e-19*np.cos(2*phi_3_1 - phi_3_2) - 2.16840434497101e-19*np.cos(2*phi_3_1 + phi_3_2))],
                [k_f*omega_1*(0.459272218341693*np.sin(phi_1_1)*np.sin(phi_1_2) - 0.0311318771343994*np.sin(phi_1_2) - 0.3247545*np.cos(phi_1_1)*np.cos(phi_1_2) - 0.3247545*np.cos(phi_1_1)), k_f*omega_2*(-0.616407330284824*np.sin(phi_2_1)*np.sin(phi_2_2) + 0.0155659385671997*np.sin(phi_2_2) + 0.454930106646069*np.cos(phi_2_1)*np.cos(phi_2_2) + 0.416801499788921*np.cos(phi_2_1)), k_f*omega_3*(0.156793013682392*np.sin(phi_3_1)*np.sin(phi_3_2) + 0.0155659385671997*np.sin(phi_3_2) - 0.129933706646069*np.cos(phi_3_1)*np.cos(phi_3_2) - 0.0918050997889205*np.cos(phi_3_1)), k_f*omega_1**2*(0.16237725*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.16237725*np.sin(phi_1_1) + 0.229636109170847*np.sin(phi_1_2)*np.cos(phi_1_1)), k_f*omega_1**2*(0.229636109170847*np.sin(phi_1_1)*np.cos(phi_1_2) + 0.16237725*np.sin(phi_1_2)*np.cos(phi_1_1) - 0.0155659385671997*np.cos(phi_1_2)), -k_f*omega_2**2*(0.227465053323035*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.20840074989446*np.sin(phi_2_1) + 0.308203665142412*np.sin(phi_2_2)*np.cos(phi_2_1)), k_f*omega_2**2*(-0.308203665142412*np.sin(phi_2_1)*np.cos(phi_2_2) - 0.227465053323035*np.sin(phi_2_2)*np.cos(phi_2_1) + 0.00778296928359986*np.cos(phi_2_2)), k_f*omega_3**2*(0.0649668533230346*np.sin(phi_3_1)*np.cos(phi_3_2) + 0.0459025498944602*np.sin(phi_3_1) + 0.0783965068411962*np.sin(phi_3_2)*np.cos(phi_3_1)), k_f*omega_3**2*(0.0783965068411962*np.sin(phi_3_1)*np.cos(phi_3_2) + 0.0649668533230346*np.sin(phi_3_2)*np.cos(phi_3_1) + 0.00778296928359986*np.cos(phi_3_2))],
                [k_f*omega_1*(-0.0368956*np.sin(phi_1_1)*np.cos(phi_1_2) - 0.0809227228656005*np.sin(phi_1_1) - 0.0833101350462922*np.sin(phi_1_2)*np.cos(phi_1_1) - 0.3247545*np.cos(phi_1_2) + 0.3247545), k_f*omega_2*(0.52537992930186*np.sin(phi_2_1)*np.cos(phi_2_2) + 0.481352806436259*np.sin(phi_2_1) + 6.93889390390723e-18*np.sin(phi_2_2)**2*np.cos(phi_2_1)**2 + 0.711867544282909*np.sin(phi_2_2)*np.cos(phi_2_1) - 1.73472347597681e-18*np.sin(phi_2_1 - 2*phi_2_2) + 1.73472347597681e-18*np.sin(phi_2_1 + 2*phi_2_2) + 0.000124517535627505*np.cos(phi_2_2) - 0.000124517535627477), k_f*omega_3*(-0.037320859236629*np.sin(phi_3_1)*np.cos(phi_3_2) - 0.0813479821022296*np.sin(phi_3_1) - 6.93889390390723e-18*np.sin(phi_3_2)**2*np.cos(phi_3_1)**2 - 0.0839115424262574*np.sin(phi_3_2)*np.cos(phi_3_1) - 1.73472347597681e-18*np.sin(phi_3_1 - 2*phi_3_2) + 1.73472347597681e-18*np.sin(phi_3_1 + 2*phi_3_2) + 0.324509037672106*np.cos(phi_3_2) - 0.324509037672106), k_f*omega_1**2*(0.0416550675231461*np.sin(phi_1_1)*np.sin(phi_1_2) - 0.0184478*np.cos(phi_1_1)*np.cos(phi_1_2) - 0.0404613614328003*np.cos(phi_1_1)), k_f*omega_1**2*(0.0184478*np.sin(phi_1_1)*np.sin(phi_1_2) + 0.16237725*np.sin(phi_1_2) - 0.0416550675231461*np.cos(phi_1_1)*np.cos(phi_1_2)), k_f*omega_2**2*(-1.73472347597681e-18*np.sin(2*phi_2_1) - 4.33680868994202e-19*np.sin(phi_2_2) + 8.67361737988404e-19*np.sin(2*phi_2_1 - 2*phi_2_2) - 6.50521303491303e-19*np.sin(2*phi_2_1 - phi_2_2) + 6.50521303491303e-19*np.sin(2*phi_2_1 + phi_2_2) + 8.67361737988404e-19*np.sin(2*phi_2_1 + 2*phi_2_2) + 0.24067640321813*np.cos(phi_2_1) - 8.67361737988404e-19*np.cos(phi_2_1 - 2*phi_2_2) - 0.0466219037452622*np.cos(phi_2_1 - phi_2_2) + 0.309311868396192*np.cos(phi_2_1 + phi_2_2) + 8.67361737988404e-19*np.cos(phi_2_1 + 2*phi_2_2)), k_f*omega_2**2*(-6.22587678137526e-5*np.sin(phi_2_2) + 1.73472347597681e-18*np.sin(2*phi_2_2) - 8.67361737988404e-19*np.sin(2*phi_2_1 - 2*phi_2_2) + 8.67361737988404e-19*np.sin(2*phi_2_1 + 2*phi_2_2) + 1.73472347597681e-18*np.cos(phi_2_1 - 2*phi_2_2) + 0.0466219037452622*np.cos(phi_2_1 - phi_2_2) + 0.309311868396192*np.cos(phi_2_1 + phi_2_2) + 1.73472347597681e-18*np.cos(phi_2_1 + 2*phi_2_2)), k_f*omega_3**2*(1.73472347597681e-18*np.sin(2*phi_3_1) + 4.33680868994202e-19*np.sin(phi_3_2) - 8.67361737988404e-19*np.sin(2*phi_3_1 - 2*phi_3_2) - 6.50521303491303e-19*np.sin(2*phi_3_1 - phi_3_2) + 6.50521303491303e-19*np.sin(2*phi_3_1 + phi_3_2) - 8.67361737988404e-19*np.sin(2*phi_3_1 + 2*phi_3_2) - 0.0406739910511148*np.cos(phi_3_1) - 8.67361737988404e-19*np.cos(phi_3_1 - 2*phi_3_2) + 0.0116476707974071*np.cos(phi_3_1 - phi_3_2) - 0.0303081004157216*np.cos(phi_3_1 + phi_3_2) + 8.67361737988404e-19*np.cos(phi_3_1 + 2*phi_3_2)), k_f*omega_3**2*(-0.162254518836053*np.sin(phi_3_2) - 1.73472347597681e-18*np.sin(2*phi_3_2) + 8.67361737988404e-19*np.sin(2*phi_3_1 - 2*phi_3_2) - 8.67361737988404e-19*np.sin(2*phi_3_1 + 2*phi_3_2) + 1.73472347597681e-18*np.cos(phi_3_1 - 2*phi_3_2) - 0.0116476707974071*np.cos(phi_3_1 - phi_3_2) - 0.0303081004157216*np.cos(phi_3_1 + phi_3_2) + 1.73472347597681e-18*np.cos(phi_3_1 + 2*phi_3_2))]
                ])
    

    A = np.array(A, dtype=float)
    
    return A
