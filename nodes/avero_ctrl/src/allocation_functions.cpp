#include "AveroAllocator.h"
#include <array>
#include <eigen3/Eigen/Dense> // hat to do this, for me it does not find #include <Eigen/Dense> only witheigen3/ infront
#include <eigen3/Eigen/Geometry>
#include <iostream>
#include "Helperfunctions.h"
#include <ros/ros.h>
#include "avero_msgs/Vector6d.h"
#include "avero_msgs/Vector9d.h"
#include "AllocationInterface.h" 
#include <geometry_msgs/Vector3.h>
#include <cmath>

/*THINGS TO DO: 1. implement input saturation
                2. compile
                3. FIRST CHECK THAT OLD SIMULATION WORKS WITH THE ALLOCATION AND THEN UPDATE IT POSSIBLY AT THE SAME TIME
                    the plan is that we will have the python matrices in the beginning and then we will parallely implement all calculations in cpp for 
                    flexibility  
                4. I am not sure whether we need the omav_states will need to add feedback for the input
                5. is prev_wrench kinda useless?
                6. RPM limits are a bit weird right now, might need to figure out a solution for satisfying both omega and omega_dot limits simultaneously */



typedef Eigen::Matrix<double, 6, 1> Vector6d;
typedef Eigen::Matrix<double, 6, 6> Matrix6d;
typedef Eigen::Matrix<double, 9, 1> Vector9d;
typedef Eigen::Matrix<double, 9, 6> Matrix96d; //not sure if 9x6 or 6x9
typedef Eigen::Matrix<double, 9, 9> Matrix9d;
typedef Eigen::Matrix<double, 6, 9> Matrix69d;


void AveroJerkAllocator::computeAllocationMatrix(const Vector9d& omav_state){
   //fix for struct idk if we should keep it seems unneccesary


   double k_f = params_.k_f;
   
   
   
    double pwm_1 = u(0);
    double pwm_2 = u(1);
    double pwm_3 = u(2);

    double phi_1_1;
    double phi_1_2;
    double phi_2_1;
    double phi_2_2;
    double phi_3_1;
    double phi_3_2;

    if(use_joint_feedback){
        phi_1_1 = omav_state(3);
        phi_1_2 = omav_state(4);
        phi_2_1 = omav_state(5);
        phi_2_2 = omav_state(6);
        phi_3_1 = omav_state(7);
        phi_3_2 = omav_state(8);
    }else{
        phi_1_1 = u(3);
        phi_1_2 = u(4);
        phi_2_1 = u(5);
        phi_2_2 = u(6);
        phi_3_1 = u(7);
        phi_3_2 = u(8);
    }

    

    allocation_matrix.setZero();

    if(drone_version){
        allocation_matrix.row(0) <<  -k_f*pwm_1*(1.0*std::sin(phi_1_1)*std::cos(phi_1_2) + 1.0*std::sin(phi_1_1) + 1.41421356237309*std::sin(phi_1_2)*std::cos(phi_1_1)), k_f*pwm_2*(-0.418890057174911*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.5*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.5*std::sin(phi_2_1) + 0.707106781186547*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.2962*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.2962*std::cos(phi_2_1) + 0.8138*std::cos(phi_2_2) - 0.8138), k_f*pwm_3*(0.418890057174911*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.5*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.5*std::sin(phi_3_1) + 0.707106781186547*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.2962*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.2962*std::cos(phi_3_1) - 0.8138*std::cos(phi_3_2) + 0.8138), k_f*std::pow(pwm_1, 2.0)*(0.707106781186547*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.5*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.5*std::cos(phi_1_1)), k_f*std::pow(pwm_1, 2.0)*(0.5*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.707106781186547*std::cos(phi_1_1)*std::cos(phi_1_2)), k_f*std::pow(pwm_2, 2.0)*(-0.353553390593274*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.1481*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.1481*std::sin(phi_2_1) - 0.209445028587455*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.25*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.25*std::cos(phi_2_1)), k_f*std::pow(pwm_2, 2.0)*(-0.25*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.209445028587455*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.1481*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.4069*std::sin(phi_2_2) + 0.353553390593274*std::cos(phi_2_1)*std::cos(phi_2_2)), k_f*std::pow(pwm_3, 2.0)*(-0.353553390593274*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.1481*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.1481*std::sin(phi_3_1) + 0.209445028587455*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.25*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.25*std::cos(phi_3_1)), k_f*std::pow(pwm_3, 2.0)*(-0.25*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.209445028587455*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.1481*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.4069*std::sin(phi_3_2) + 0.353553390593274*std::cos(phi_3_1)*std::cos(phi_3_2));
        allocation_matrix.row(1) <<  k_f*pwm_1*(0.483661038331599*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.342*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.342*std::cos(phi_1_1) - 0.9397*std::cos(phi_1_2) + 0.9397), k_f*pwm_2*(-0.241830519165799*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.866*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.866*std::sin(phi_2_1) - 1.2247089450151*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.171*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.171*std::cos(phi_2_1) + 0.4698*std::cos(phi_2_2) - 0.4698), k_f*pwm_3*(-0.241830519165799*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.866*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.866*std::sin(phi_3_1) + 1.2247089450151*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.171*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.171*std::cos(phi_3_1) + 0.4698*std::cos(phi_3_2) - 0.4698), k_f*std::pow(pwm_1, 2.0)*(0.171*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.171*std::sin(phi_1_1) + 0.241830519165799*std::sin(phi_1_2)*std::cos(phi_1_1)), k_f*std::pow(pwm_1, 2.0)*(0.241830519165799*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.171*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.46985*std::sin(phi_1_2)), k_f*std::pow(pwm_2, 2.0)*(0.61235447250755*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.0855*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.0855*std::sin(phi_2_1) - 0.1209152595829*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.433*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.433*std::cos(phi_2_1)), k_f*std::pow(pwm_2, 2.0)*(0.433*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.1209152595829*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.0855*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.2349*std::sin(phi_2_2) - 0.61235447250755*std::cos(phi_2_1)*std::cos(phi_2_2)), k_f*std::pow(pwm_3, 2.0)*(-0.61235447250755*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.0855*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.0855*std::sin(phi_3_1) - 0.1209152595829*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.433*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.433*std::cos(phi_3_1)), k_f*std::pow(pwm_3, 2.0)*(-0.433*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.1209152595829*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.0855*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.2349*std::sin(phi_3_2) + 0.61235447250755*std::cos(phi_3_1)*std::cos(phi_3_2));
        allocation_matrix.row(2) <<  k_f*pwm_1*(-1.328936484562*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.9397*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.9397*std::cos(phi_1_1) - 0.342*std::cos(phi_1_2) + 0.342), k_f*pwm_2*(-1.328936484562*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.9397*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.9397*std::cos(phi_2_1) - 0.342*std::cos(phi_2_2) + 0.342), k_f*pwm_3*(-1.328936484562*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.9397*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.9397*std::cos(phi_3_1) - 0.342*std::cos(phi_3_2) + 0.342), -k_f*std::pow(pwm_1, 2.0)*(0.46985*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.46985*std::sin(phi_1_1) + 0.664468242280999*std::sin(phi_1_2)*std::cos(phi_1_1)), k_f*std::pow(pwm_1, 2.0)*(-0.664468242280999*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.46985*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.171*std::sin(phi_1_2)), -k_f*std::pow(pwm_2, 2.0)*(0.46985*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.46985*std::sin(phi_2_1) + 0.664468242280999*std::sin(phi_2_2)*std::cos(phi_2_1)), k_f*std::pow(pwm_2, 2.0)*(-0.664468242280999*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.46985*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.171*std::sin(phi_2_2)), -k_f*std::pow(pwm_3, 2.0)*(0.46985*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.46985*std::sin(phi_3_1) + 0.664468242280999*std::sin(phi_3_2)*std::cos(phi_3_1)), k_f*std::pow(pwm_3, 2.0)*(-0.664468242280999*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.46985*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.171*std::sin(phi_3_2));
        allocation_matrix.row(3) <<  k_f*pwm_1*(-0.151231466351706*std::cos(phi_1_1) - 6.50521303491303e-19*std::cos(2*phi_1_1) + 0.0402363*std::cos(phi_1_2) - 1.0842021724855e-18*std::cos(2*phi_1_2) - 8.67361737988404e-19*std::cos(phi_1_1 - 2*phi_1_2) + 0.0144726101984955*std::cos(phi_1_1 - phi_1_2) - 0.28075250327707*std::cos(phi_1_1 + phi_1_2) + 8.67361737988404e-19*std::cos(phi_1_1 + 2*phi_1_2) + 1.0842021724855e-19*std::cos(2*phi_1_1 - 2*phi_1_2) + 1.0842021724855e-19*std::cos(2*phi_1_1 + 2*phi_1_2) - 0.0402363), k_f*pwm_2*(-0.0120470205068257*std::sin(phi_2_1) - 0.0662022524576848*std::sin(phi_2_2) - 8.67361737988404e-19*std::sin(2*phi_2_2) - 2.16840434497101e-19*std::sin(phi_2_1 - 2*phi_2_2) - 0.002495019640057*std::sin(phi_2_1 - phi_2_2) - 0.0436261204406481*std::sin(phi_2_1 + phi_2_2) - 2.16840434497101e-19*std::sin(phi_2_1 + 2*phi_2_2) + 4.33680868994202e-19*std::sin(2*phi_2_1 - 2*phi_2_2) + 3.46944695195361e-18*std::sin(2*phi_2_1 - phi_2_2) - 3.46944695195361e-18*std::sin(2*phi_2_1 + phi_2_2) - 4.33680868994202e-19*std::sin(2*phi_2_1 + 2*phi_2_2) + 0.197892284525378*std::cos(phi_2_1) + 3.25260651745651e-19*std::cos(2*phi_2_1) - 0.0646209*std::cos(phi_2_2) + 3.25260651745651e-19*std::cos(2*phi_2_2) - 0.0325613996882859*std::cos(phi_2_1 - phi_2_2) + 0.287972492027255*std::cos(phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::cos(phi_2_1 + 2*phi_2_2) - 5.42101086242752e-20*std::cos(2*phi_2_1 - 2*phi_2_2) - 5.42101086242752e-20*std::cos(2*phi_2_1 + 2*phi_2_2) + 0.0646209), k_f*pwm_3*(0.0120470205068257*std::sin(phi_3_1) + 0.0662022524576848*std::sin(phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_2) + 2.16840434497101e-19*std::sin(phi_3_1 - 2*phi_3_2) + 0.002495019640057*std::sin(phi_3_1 - phi_3_2) + 0.0436261204406481*std::sin(phi_3_1 + phi_3_2) + 2.16840434497101e-19*std::sin(phi_3_1 + 2*phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 - 2*phi_3_2) - 3.46944695195361e-18*std::sin(2*phi_3_1 - phi_3_2) + 3.46944695195361e-18*std::sin(2*phi_3_1 + phi_3_2) + 4.33680868994202e-19*std::sin(2*phi_3_1 + 2*phi_3_2) - 0.042971619474622*std::cos(phi_3_1) + 3.25260651745651e-19*std::cos(2*phi_3_1) + 0.02304054*std::cos(phi_3_2) + 3.25260651745651e-19*std::cos(2*phi_3_2) + 0.0173231481731796*std::cos(phi_3_1 - phi_3_2) - 0.00277595983421059*std::cos(phi_3_1 + phi_3_2) - 8.67361737988404e-19*std::cos(phi_3_1 + 2*phi_3_2) - 5.42101086242752e-20*std::cos(2*phi_3_1 - 2*phi_3_2) - 5.42101086242752e-20*std::cos(2*phi_3_1 + 2*phi_3_2) - 0.02304054), k_f*std::pow(pwm_1, 2.0)*(0.0756157331758531*std::sin(phi_1_1) + 6.50521303491303e-19*std::sin(2*phi_1_1) + 4.33680868994202e-19*std::sin(phi_1_2) + 3.79470760369927e-19*std::sin(phi_1_1 - 2*phi_1_2) - 0.00723630509924775*std::sin(phi_1_1 - phi_1_2) + 0.140376251638535*std::sin(phi_1_1 + phi_1_2) - 2.71050543121376e-19*std::sin(phi_1_1 + 2*phi_1_2) - 1.0842021724855e-19*std::sin(2*phi_1_1 - 2*phi_1_2) - 2.16840434497101e-19*std::sin(2*phi_1_1 - phi_1_2) + 2.16840434497101e-19*std::sin(2*phi_1_1 + phi_1_2) - 1.0842021724855e-19*std::sin(2*phi_1_1 + 2*phi_1_2)), k_f*std::pow(pwm_1, 2.0)*(-2.16840434497101e-19*std::sin(phi_1_1) - 0.02011815*std::sin(phi_1_2) + 1.0842021724855e-18*std::sin(2*phi_1_2) - 7.58941520739853e-19*std::sin(phi_1_1 - 2*phi_1_2) + 0.00723630509924773*std::sin(phi_1_1 - phi_1_2) + 0.140376251638535*std::sin(phi_1_1 + phi_1_2) - 7.58941520739853e-19*std::sin(phi_1_1 + 2*phi_1_2) + 1.0842021724855e-19*std::sin(2*phi_1_1 - 2*phi_1_2) - 1.0842021724855e-19*std::sin(2*phi_1_1 + 2*phi_1_2)), k_f*std::pow(pwm_2, 2.0)*(-0.098946142262689*std::sin(phi_2_1) - 3.25260651745651e-19*std::sin(2*phi_2_1) - 1.35525271560688e-19*std::sin(phi_2_1 - 2*phi_2_2) + 0.016280699844143*std::sin(phi_2_1 - phi_2_2) - 0.143986246013628*std::sin(phi_2_1 + phi_2_2) + 4.06575814682064e-19*std::sin(phi_2_1 + 2*phi_2_2) + 5.42101086242752e-20*std::sin(2*phi_2_1 - 2*phi_2_2) + 5.42101086242752e-20*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.00602351025341284*std::cos(phi_2_1) - 1.0842021724855e-19*std::cos(phi_2_1 - 2*phi_2_2) - 0.0012475098200285*std::cos(phi_2_1 - phi_2_2) - 0.021813060220324*std::cos(phi_2_1 + phi_2_2) - 1.0842021724855e-19*std::cos(phi_2_1 + 2*phi_2_2) + 8.67361737988404e-19*std::cos(2*phi_2_1 - 2*phi_2_2) + 3.46944695195361e-18*std::cos(2*phi_2_1 - phi_2_2) - 3.46944695195361e-18*std::cos(2*phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_1 + 2*phi_2_2)), k_f*std::pow(pwm_2, 2.0)*(1.0842021724855e-19*std::sin(phi_2_1) + 0.03231045*std::sin(phi_2_2) - 3.25260651745651e-19*std::sin(2*phi_2_2) + 5.42101086242752e-20*std::sin(phi_2_1 - 2*phi_2_2) - 0.016280699844143*std::sin(phi_2_1 - phi_2_2) - 0.143986246013628*std::sin(phi_2_1 + phi_2_2) + 9.21571846612679e-19*std::sin(phi_2_1 + 2*phi_2_2) - 5.42101086242752e-20*std::sin(2*phi_2_1 - 2*phi_2_2) + 5.42101086242752e-20*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.0331011262288424*std::cos(phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_2) + 2.16840434497101e-19*std::cos(phi_2_1 - 2*phi_2_2) + 0.0012475098200285*std::cos(phi_2_1 - phi_2_2) - 0.021813060220324*std::cos(phi_2_1 + phi_2_2) - 2.16840434497101e-19*std::cos(phi_2_1 + 2*phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 - 2*phi_2_2) - 1.73472347597681e-18*std::cos(2*phi_2_1 - phi_2_2) - 1.73472347597681e-18*std::cos(2*phi_2_1 + phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 + 2*phi_2_2)), k_f*std::pow(pwm_3, 2.0)*(0.021485809737311*std::sin(phi_3_1) - 3.25260651745651e-19*std::sin(2*phi_3_1) - 2.16840434497101e-19*std::sin(phi_3_2) - 2.71050543121376e-20*std::sin(phi_3_1 - 2*phi_3_2) - 0.00866157408658982*std::sin(phi_3_1 - phi_3_2) + 0.0013879799171053*std::sin(phi_3_1 + phi_3_2) + 5.14996031930615e-19*std::sin(phi_3_1 + 2*phi_3_2) + 5.42101086242752e-20*std::sin(2*phi_3_1 - 2*phi_3_2) - 1.0842021724855e-19*std::sin(2*phi_3_1 - phi_3_2) + 1.0842021724855e-19*std::sin(2*phi_3_1 + phi_3_2) + 5.42101086242752e-20*std::sin(2*phi_3_1 + 2*phi_3_2) + 0.00602351025341284*std::cos(phi_3_1) + 1.0842021724855e-19*std::cos(phi_3_1 - 2*phi_3_2) + 0.0012475098200285*std::cos(phi_3_1 - phi_3_2) + 0.021813060220324*std::cos(phi_3_1 + phi_3_2) + 1.0842021724855e-19*std::cos(phi_3_1 + 2*phi_3_2) - 8.67361737988404e-19*std::cos(2*phi_3_1 - 2*phi_3_2) - 3.46944695195361e-18*std::cos(2*phi_3_1 - phi_3_2) + 3.46944695195361e-18*std::cos(2*phi_3_1 + phi_3_2) + 8.67361737988404e-19*std::cos(2*phi_3_1 + 2*phi_3_2)), k_f*std::pow(pwm_3, 2.0)*(1.0842021724855e-19*std::sin(phi_3_1) - 0.01152027*std::sin(phi_3_2) - 3.25260651745651e-19*std::sin(2*phi_3_2) + 5.42101086242752e-20*std::sin(phi_3_1 - 2*phi_3_2) + 0.00866157408658981*std::sin(phi_3_1 - phi_3_2) + 0.0013879799171053*std::sin(phi_3_1 + phi_3_2) + 9.21571846612679e-19*std::sin(phi_3_1 + 2*phi_3_2) - 5.42101086242752e-20*std::sin(2*phi_3_1 - 2*phi_3_2) + 2.16840434497101e-19*std::sin(2*phi_3_1 - phi_3_2) - 2.16840434497101e-19*std::sin(2*phi_3_1 + phi_3_2) + 5.42101086242752e-20*std::sin(2*phi_3_1 + 2*phi_3_2) + 0.0331011262288424*std::cos(phi_3_2) + 8.67361737988404e-19*std::cos(2*phi_3_2) - 2.16840434497101e-19*std::cos(phi_3_1 - 2*phi_3_2) - 0.0012475098200285*std::cos(phi_3_1 - phi_3_2) + 0.021813060220324*std::cos(phi_3_1 + phi_3_2) + 2.16840434497101e-19*std::cos(phi_3_1 + 2*phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1 - 2*phi_3_2) + 1.73472347597681e-18*std::cos(2*phi_3_1 - phi_3_2) + 1.73472347597681e-18*std::cos(2*phi_3_1 + phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1 + 2*phi_3_2));
        allocation_matrix.row(4) <<  k_f*pwm_1*(0.0139111091302837*std::sin(phi_1_1) + 0.0764460190042549*std::sin(phi_1_2) + 8.67361737988404e-19*std::sin(2*phi_1_2) + 0.00288108503470786*std::sin(phi_1_1 - phi_1_2) + 0.0503765824949747*std::sin(phi_1_1 + phi_1_2) - 4.33680868994202e-19*std::sin(2*phi_1_1 - 2*phi_1_2) + 4.33680868994202e-19*std::sin(2*phi_1_1 + 2*phi_1_2) - 0.141640981*std::cos(phi_1_1) + 0.05154966*std::cos(phi_1_2) + 0.0293348076590149*std::cos(phi_1_1 - phi_1_2) - 0.170975788659015*std::cos(phi_1_1 + phi_1_2) - 0.05154966), k_f*pwm_2*(-0.00695555456514185*std::sin(phi_2_1) - 0.0382230095021275*std::sin(phi_2_2) - 8.67361737988404e-19*std::sin(2*phi_2_2) - 0.00144054251735392*std::sin(phi_2_1 - phi_2_2) - 0.0251882912474873*std::sin(phi_2_1 + phi_2_2) + 4.33680868994202e-19*sqrt(2)*std::sin(2*phi_2_2 + M_PI/4) - 2.16840434497101e-19*sqrt(2)*std::sin(-2*phi_2_1 + 2*phi_2_2 + M_PI/4) - 2.16840434497101e-19*sqrt(2)*std::sin(2*phi_2_1 + 2*phi_2_2 + M_PI/4) - 0.0640469546572213*std::cos(phi_2_1) - 1.30104260698261e-18*std::cos(2*phi_2_1) + 0.01048914*std::cos(phi_2_2) - 0.0013266756423414*std::cos(phi_2_1 - phi_2_2) - 0.162355458861721*std::cos(phi_2_1 + phi_2_2) + 1.73472347597681e-18*std::cos(phi_2_1 + 2*phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_1 - phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_1 + phi_2_2) - 0.01048914), -k_f*pwm_3*(-1.73472347597681e-18*sqrt(2)*std::pow(std::sin(phi_3_1), 2.0)*std::sin(phi_3_2)*std::sin(phi_3_2 + M_PI/4) + 3.46944695195361e-18*std::pow(std::sin(phi_3_1), 2.0)*std::cos(phi_3_2) + 3.46944695195361e-18*std::pow(std::sin(phi_3_1), 2.0) + 0.348448695637158*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.0266288337648413*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.00695555456514185*std::sin(phi_3_1) - 3.46944695195361e-18*std::sin(phi_3_2)*std::sin(phi_3_1 + phi_3_2) + 0.0237477487301334*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.0382230095021275*std::sin(phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_2) - 0.296208025504063*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.196572845657221*std::cos(phi_3_1) + 0.0587214*std::cos(phi_3_2) - 0.0587214), k_f*std::pow(pwm_1, 2.0)*(0.0708204905*std::sin(phi_1_1) - 0.0146674038295075*std::sin(phi_1_1 - phi_1_2) + 0.0854878943295075*std::sin(phi_1_1 + phi_1_2) + 0.00695555456514185*std::cos(phi_1_1) + 0.00144054251735393*std::cos(phi_1_1 - phi_1_2) + 0.0251882912474873*std::cos(phi_1_1 + phi_1_2) - 8.67361737988404e-19*std::cos(2*phi_1_1 - 2*phi_1_2) + 8.67361737988404e-19*std::cos(2*phi_1_1 + 2*phi_1_2)), k_f*std::pow(pwm_1, 2.0)*(-0.02577483*std::sin(phi_1_2) + 0.0146674038295075*std::sin(phi_1_1 - phi_1_2) + 0.0854878943295075*std::sin(phi_1_1 + phi_1_2) + 0.0382230095021275*std::cos(phi_1_2) + 8.67361737988404e-19*std::cos(2*phi_1_2) - 0.00144054251735393*std::cos(phi_1_1 - phi_1_2) + 0.0251882912474873*std::cos(phi_1_1 + phi_1_2) + 4.33680868994202e-19*std::cos(2*phi_1_1 - 2*phi_1_2) - 4.33680868994202e-19*std::cos(2*phi_1_1 - phi_1_2) + 4.33680868994202e-19*std::cos(2*phi_1_1 + phi_1_2) + 4.33680868994202e-19*std::cos(2*phi_1_1 + 2*phi_1_2)), k_f*std::pow(pwm_2, 2.0)*(0.0320234773286107*std::sin(phi_2_1) + 1.3010426069826e-18*std::sin(2*phi_2_1) + 2.71050543121376e-19*std::sin(phi_2_1 - 2*phi_2_2) + 0.000663337821170708*std::sin(phi_2_1 - phi_2_2) + 0.0811777294308606*std::sin(phi_2_1 + phi_2_2) - 9.21571846612679e-19*std::sin(phi_2_1 + 2*phi_2_2) + 2.16840434497101e-19*std::sin(2*phi_2_1 - 2*phi_2_2) + 8.67361737988403e-19*std::sin(2*phi_2_1 - phi_2_2) + 8.67361737988403e-19*std::sin(2*phi_2_1 + phi_2_2) + 2.16840434497101e-19*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.00347777728257093*std::cos(phi_2_1) - 0.000720271258676963*std::cos(phi_2_1 - phi_2_2) - 0.0125941456237437*std::cos(phi_2_1 + phi_2_2) + 4.33680868994202e-19*std::cos(2*phi_2_1 - 2*phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 + 2*phi_2_2)), k_f*std::pow(pwm_2, 2.0)*(-3.25260651745651e-19*std::sin(phi_2_1) - 0.00524457*std::sin(phi_2_2) - 1.62630325872826e-19*std::sin(phi_2_1 - 2*phi_2_2) - 0.000663337821170708*std::sin(phi_2_1 - phi_2_2) + 0.0811777294308606*std::sin(phi_2_1 + phi_2_2) - 1.89735380184963e-18*std::sin(phi_2_1 + 2*phi_2_2) + 2.16840434497101e-19*sqrt(2)*std::sin(2*phi_2_1 + M_PI/4) - 3.25260651745651e-19*std::sin(2*phi_2_1 - phi_2_2) + 3.25260651745651e-19*std::sin(2*phi_2_1 + phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1) - 0.0191115047510637*std::cos(phi_2_2) - 8.67361737988403e-19*std::cos(2*phi_2_2) + 0.000720271258676963*std::cos(phi_2_1 - phi_2_2) - 0.0125941456237437*std::cos(phi_2_1 + phi_2_2) + 2.16840434497101e-19*sqrt(2)*std::cos(2*phi_2_1 + M_PI/4) - 2.16840434497101e-19*std::cos(2*phi_2_1 - phi_2_2) + 2.16840434497101e-19*std::cos(2*phi_2_1 + phi_2_2) + 4.33680868994202e-19*sqrt(2)*std::cos(2*phi_2_2 + M_PI/4) - 2.16840434497101e-19*sqrt(2)*std::cos(-2*phi_2_1 + 2*phi_2_2 + M_PI/4) - 2.16840434497101e-19*sqrt(2)*std::cos(2*phi_2_1 + 2*phi_2_2 + M_PI/4)), k_f*std::pow(pwm_3, 2.0)*(-0.0982864228286107*std::sin(phi_3_1) - 1.30104260698261e-18*std::sin(2*phi_3_1) - 2.16840434497101e-19*std::sin(phi_3_1 - 2*phi_3_2) + 0.0130601675332739*std::sin(phi_3_1 - phi_3_2) - 0.161164180285305*std::sin(phi_3_1 + phi_3_2) + 4.33680868994202e-19*std::sin(phi_3_1 + 2*phi_3_2) - 1.73472347597681e-18*std::sin(2*phi_3_1 + phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 + 2*phi_3_2) - 0.00347777728257093*std::cos(phi_3_1) - 0.000720271258676962*std::cos(phi_3_1 - phi_3_2) - 0.0125941456237437*std::cos(phi_3_1 + phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1 - 2*phi_3_2) - 4.33680868994202e-19*std::cos(2*phi_3_1 + 2*phi_3_2)), k_f*std::pow(pwm_3, 2.0)*(-2.16840434497101e-19*std::sin(phi_3_1) + 4.33680868994202e-19*std::sin(2*phi_3_1) + 0.0293607*std::sin(phi_3_2) + 4.33680868994202e-19*std::sin(2*phi_3_2) - 1.0842021724855e-19*std::sin(phi_3_1 - 2*phi_3_2) - 0.0130601675332739*std::sin(phi_3_1 - phi_3_2) - 0.161164180285305*std::sin(phi_3_1 + phi_3_2) + 1.62630325872826e-18*std::sin(phi_3_1 + 2*phi_3_2) - 4.33680868994202e-19*sqrt(2)*std::sin(2*phi_3_1 + M_PI/4) - 8.67361737988404e-19*std::sin(2*phi_3_1 + phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 + 2*phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1) - 0.0191115047510637*std::cos(phi_3_2) - 4.33680868994202e-19*std::cos(2*phi_3_2) + 0.000720271258676962*std::cos(phi_3_1 - phi_3_2) - 0.0125941456237437*std::cos(phi_3_1 + phi_3_2) - 2.16840434497101e-19*std::cos(2*phi_3_1 - 2*phi_3_2) - 2.16840434497101e-19*std::cos(2*phi_3_1 + 2*phi_3_2));
        allocation_matrix.row(5) <<  k_f*pwm_1*(0.0729022283077218*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.263984006367376*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.155873009502127*std::sin(phi_1_1) - 0.296883743050074*std::sin(phi_1_2)*std::cos(phi_1_1) + 3.46944695195361e-18*std::sin(phi_1_2)*std::cos(phi_1_1 + phi_1_2) + 0.0278222182605674*std::sin(phi_1_2) - 0.05154966*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.05154966*std::cos(phi_1_1) - 0.141640981*std::cos(phi_1_2) + 0.141640981), k_f*pwm_2*(2.16840434497101e-19*std::pow(std::sin(phi_2_1), 2.0)*std::pow(std::sin(phi_2_2), 2.0) + 8.67361737988404e-19*std::pow(std::sin(phi_2_1), 2.0)*std::sin(phi_2_2)*std::cos(phi_2_2) - 8.67361737988404e-19*std::pow(std::sin(phi_2_1), 2.0)*std::cos(phi_2_2) - 1.0842021724855e-18*std::pow(std::sin(phi_2_1), 2.0) + 0.0717316343467375*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.267361564738012*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.159256228254849*std::sin(phi_2_1) - 2.16840434497101e-19*std::pow(std::sin(phi_2_2), 2.0) - 0.301664334400091*std::sin(phi_2_2)*std::cos(phi_2_1) + 3.46944695195361e-18*std::sin(phi_2_2)*std::cos(phi_2_1 + phi_2_2) + 0.0278229666945089*std::sin(phi_2_2) - 0.0507216351501627*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.0507222149941813*std::cos(phi_2_1) - 0.139358744*std::cos(phi_2_2) + 0.139358744), k_f*pwm_3*(-2.16840434497101e-19*std::pow(std::sin(phi_3_1), 2.0)*std::pow(std::sin(phi_3_2), 2.0) + 8.67361737988404e-19*std::pow(std::sin(phi_3_1), 2.0)*std::sin(phi_3_2)*std::cos(phi_3_2) + 3.46944695195361e-18*std::pow(std::sin(phi_3_1), 2.0)*std::sin(phi_3_2) + 8.67361737988404e-19*std::pow(std::sin(phi_3_1), 2.0)*std::cos(phi_3_2) + 1.0842021724855e-18*std::pow(std::sin(phi_3_1), 2.0) + 0.0697436232262882*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.261333544738012*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.153228208254849*std::sin(phi_3_1) + 2.16840434497101e-19*std::pow(std::sin(phi_3_2), 2.0) - 0.293139426761835*std::sin(phi_3_2)*std::cos(phi_3_1) + 3.46944695195361e-18*std::sin(phi_3_2)*std::cos(phi_3_1 + phi_3_2) + 0.0278229666945089*std::sin(phi_3_2) - 0.0493164788498373*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.0493158990058188*std::cos(phi_3_1) - 0.135490366*std::cos(phi_3_2) + 0.135490366), k_f*std::pow(pwm_1, 2.0)*(0.148441871525037*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.02577483*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.02577483*std::sin(phi_1_1) - 1.73472347597681e-18*std::sin(phi_1_2)*std::sin(phi_1_1 + phi_1_2) + 0.0364511141538609*std::sin(phi_1_2)*std::cos(phi_1_1) - 0.131992003183688*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.0779365047510637*std::cos(phi_1_1)), k_f*std::pow(pwm_1, 2.0)*(0.0708204905*std::sin(phi_1_2) + 0.00533814207693046*std::sin(phi_1_1 - phi_1_2) + 0.0311129720769305*std::sin(phi_1_1 + phi_1_2) + 0.0139111091302837*std::cos(phi_1_2) - 0.00822493417067444*std::cos(phi_1_1 - phi_1_2) - 0.140216937354363*std::cos(phi_1_1 + phi_1_2) + 1.73472347597681e-18*std::cos(phi_1_1 + 2*phi_1_2) + 2.16840434497101e-19*std::cos(2*phi_1_1 - phi_1_2) - 2.16840434497101e-19*std::cos(2*phi_1_1 + phi_1_2)), k_f*std::pow(pwm_2, 2.0)*(0.0253611074970906*std::sin(phi_2_1) - 3.46944695195361e-18*std::sin(2*phi_2_1) - 8.67361737988404e-19*std::sin(phi_2_2) - 0.0052524997991437*std::sin(phi_2_1 - phi_2_2) + 0.0306133173742251*std::sin(phi_2_1 + phi_2_2) + 4.33680868994202e-19*std::sin(2*phi_2_1 - phi_2_2) - 2.16840434497101e-18*std::sin(2*phi_2_1 + phi_2_2) - 0.0796281141274245*std::cos(phi_2_1) + 2.16840434497101e-19*std::cos(2*phi_2_1) - 1.73472347597681e-18*std::cos(phi_2_2) - 2.16840434497101e-19*std::cos(phi_2_1 - 2*phi_2_2) + 0.0085756924155197*std::cos(phi_2_1 - phi_2_2) - 0.142256474784526*std::cos(phi_2_1 + phi_2_2) + 6.50521303491303e-19*std::cos(phi_2_1 + 2*phi_2_2) + 1.62630325872826e-19*std::cos(2*phi_2_1 - 2*phi_2_2) + 4.33680868994202e-19*std::cos(2*phi_2_1 - phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 + phi_2_2) - 2.71050543121376e-19*std::cos(2*phi_2_1 + 2*phi_2_2) + 1.0842021724855e-19), k_f*std::pow(pwm_2, 2.0)*(0.069679372*std::sin(phi_2_2) + 0.0052524997991437*std::sin(phi_2_1 - phi_2_2) + 0.0306133173742251*std::sin(phi_2_1 + phi_2_2) + 1.35525271560688e-19*std::sin(2*phi_2_1 - phi_2_2) - 1.35525271560688e-19*std::sin(2*phi_2_1 + phi_2_2) - 2.16840434497101e-19*std::cos(phi_2_1) - 1.0842021724855e-19*std::cos(2*phi_2_1) + 0.0139114833472545*std::cos(phi_2_2) + 1.0842021724855e-19*std::cos(2*phi_2_2) + 1.0842021724855e-19*std::cos(phi_2_1 - 2*phi_2_2) - 0.0085756924155197*std::cos(phi_2_1 - phi_2_2) - 0.142256474784526*std::cos(phi_2_1 + phi_2_2) + 1.84314369322536e-18*std::cos(phi_2_1 + 2*phi_2_2) - 2.71050543121376e-19*std::cos(2*phi_2_1 - 2*phi_2_2) + 1.62630325872826e-19*std::cos(2*phi_2_1 + 2*phi_2_2) - 3.25260651745651e-19), k_f*std::pow(pwm_3, 2.0)*(0.0246579495029094*std::sin(phi_3_1) + 3.46944695195361e-18*std::sin(2*phi_3_1) + 8.67361737988404e-19*std::sin(phi_3_2) - 0.00510678609411274*std::sin(phi_3_1 - phi_3_2) + 0.0297650255190314*std::sin(phi_3_1 + phi_3_2) - 1.3010426069826e-18*std::sin(2*phi_3_1 - phi_3_2) + 1.3010426069826e-18*std::sin(2*phi_3_1 + phi_3_2) - 0.0766141041274245*std::cos(phi_3_1) - 2.16840434497101e-19*std::cos(2*phi_3_1) - 1.73472347597681e-18*std::cos(phi_3_2) - 2.16840434497101e-19*std::cos(phi_3_1 - 2*phi_3_2) + 0.00795147050595564*std::cos(phi_3_1 - phi_3_2) - 0.138618242874962*std::cos(phi_3_1 + phi_3_2) + 6.50521303491302e-19*std::cos(phi_3_1 + 2*phi_3_2) + 2.71050543121376e-19*std::cos(2*phi_3_1 - 2*phi_3_2) - 1.62630325872826e-19*std::cos(2*phi_3_1 + 2*phi_3_2) + 1.0842021724855e-19), k_f*std::pow(pwm_3, 2.0)*(0.067745183*std::sin(phi_3_2) + 0.00510678609411274*std::sin(phi_3_1 - phi_3_2) + 0.0297650255190314*std::sin(phi_3_1 + phi_3_2) - 1.35525271560688e-19*std::sin(2*phi_3_1 - phi_3_2) + 1.35525271560688e-19*std::sin(2*phi_3_1 + phi_3_2) - 2.16840434497101e-19*std::cos(phi_3_1) - 1.0842021724855e-19*std::cos(2*phi_3_1) + 0.0139114833472545*std::cos(phi_3_2) + 1.0842021724855e-19*std::cos(2*phi_3_2) + 1.08420217248551e-19*std::cos(phi_3_1 - 2*phi_3_2) - 0.00795147050595563*std::cos(phi_3_1 - phi_3_2) - 0.138618242874962*std::cos(phi_3_1 + phi_3_2) + 1.84314369322536e-18*std::cos(phi_3_1 + 2*phi_3_2) - 1.62630325872826e-19*std::cos(2*phi_3_1 - 2*phi_3_2) + 5.42101086242752e-20*std::cos(2*phi_3_1 + 2*phi_3_2) - 3.25260651745651e-19);
   
    } 
    else if (!drone_version){

        allocation_matrix.row(0) << k_f*pwm_1*(-8.65956056235493e-17*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.5*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_1) - 0.707106781186547*std::sin(phi_1_2)*std::cos(phi_1_1) + 6.12323399573677e-17*std::cos(phi_1_1)*std::cos(phi_1_2) + 6.12323399573677e-17*std::cos(phi_1_1) + 0.866025403784438*std::cos(phi_1_2) - 0.866025403784439), 
                    k_f*pwm_2*(-8.65956056235493e-17*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.5*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.5*std::sin(phi_2_1) - 0.707106781186547*std::sin(phi_2_2)*std::cos(phi_2_1) + 6.12323399573677e-17*std::cos(phi_2_1)*std::cos(phi_2_2) + 6.12323399573677e-17*std::cos(phi_2_1) - 0.866025403784438*std::cos(phi_2_2) + 0.866025403784439), 
                    k_f*pwm_3*(-8.65956056235493e-17*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.866025403784439*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.866025403784439*std::sin(phi_3_1) + 1.22474487139159*std::sin(phi_3_2)*std::cos(phi_3_1) + 6.12323399573677e-17*std::cos(phi_3_1)*std::cos(phi_3_2) + 6.12323399573677e-17*std::cos(phi_3_1) - 0.5*std::cos(phi_3_2) + 0.5), 
                    k_f*std::pow(pwm_1, 2.0)*(0.353553390593274*std::sin(phi_1_1)*std::sin(phi_1_2) - 3.06161699786838e-17*std::sin(phi_1_1)*std::cos(phi_1_2) - 3.06161699786838e-17*std::sin(phi_1_1) - 4.32978028117747e-17*std::sin(phi_1_2)*std::cos(phi_1_1) - 0.25*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.25*std::cos(phi_1_1)), 
                    k_f*std::pow(pwm_1, 2.0)*(0.25*std::sin(phi_1_1)*std::sin(phi_1_2) - 4.32978028117747e-17*std::sin(phi_1_1)*std::cos(phi_1_2) - 3.06161699786838e-17*std::sin(phi_1_2)*std::cos(phi_1_1) - 0.433012701892219*std::sin(phi_1_2) - 0.353553390593274*std::cos(phi_1_1)*std::cos(phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.353553390593274*std::sin(phi_2_1)*std::sin(phi_2_2) - 3.06161699786838e-17*std::sin(phi_2_1)*std::cos(phi_2_2) - 3.06161699786838e-17*std::sin(phi_2_1) - 4.32978028117747e-17*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.25*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.25*std::cos(phi_2_1)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.25*std::sin(phi_2_1)*std::sin(phi_2_2) - 4.32978028117747e-17*std::sin(phi_2_1)*std::cos(phi_2_2) - 3.06161699786838e-17*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.433012701892219*std::sin(phi_2_2) - 0.353553390593274*std::cos(phi_2_1)*std::cos(phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(-0.612372435695794*std::sin(phi_3_1)*std::sin(phi_3_2) - 3.06161699786838e-17*std::sin(phi_3_1)*std::cos(phi_3_2) - 3.06161699786838e-17*std::sin(phi_3_1) - 4.32978028117747e-17*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.433012701892219*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.433012701892219*std::cos(phi_3_1)), 
                    k_f*std::pow(pwm_3, 2.0)*(-0.433012701892219*std::sin(phi_3_1)*std::sin(phi_3_2) - 4.32978028117747e-17*std::sin(phi_3_1)*std::cos(phi_3_2) - 3.06161699786838e-17*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.25*std::sin(phi_3_2) + 0.612372435695794*std::cos(phi_3_1)*std::cos(phi_3_2));

        allocation_matrix.row(1) << k_f*pwm_1*(0.866025403784439*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.866025403784439*std::sin(phi_1_1) + 1.22474487139159*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.5*std::cos(phi_1_2) - 0.5), 
                    k_f*pwm_2*(-0.866025403784439*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.866025403784439*std::sin(phi_2_1) - 1.22474487139159*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.5*std::cos(phi_2_2) - 0.5),
                    k_f*pwm_3*(-0.5*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.5*std::sin(phi_3_1) - 0.707106781186547*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.866025403784438*std::cos(phi_3_2) + 0.866025403784439), 
                    k_f*std::pow(pwm_1, 2.0)*(-0.612372435695794*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.433012701892219*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.433012701892219*std::cos(phi_1_1)), 
                    k_f*std::pow(pwm_1, 2.0)*(-0.433012701892219*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.25*std::sin(phi_1_2) + 0.612372435695794*std::cos(phi_1_1)*std::cos(phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.612372435695794*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.433012701892219*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.433012701892219*std::cos(phi_2_1)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.433012701892219*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.25*std::sin(phi_2_2) - 0.612372435695794*std::cos(phi_2_1)*std::cos(phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(0.353553390593274*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.25*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.25*std::cos(phi_3_1)), 
                    k_f*std::pow(pwm_3, 2.0)*(0.25*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.433012701892219*std::sin(phi_3_2) - 0.353553390593274*std::cos(phi_3_1)*std::cos(phi_3_2));

        allocation_matrix.row(2) << k_f*pwm_1*(-1.41421356237309*std::sin(phi_1_1)*std::sin(phi_1_2) + 3.06161699786838e-17*std::sin(phi_1_1)*std::cos(phi_1_2) + 3.06161699786838e-17*std::sin(phi_1_1) + 4.32978028117746e-17*std::sin(phi_1_2)*std::cos(phi_1_1) + 1.0*std::cos(phi_1_1)*std::cos(phi_1_2) + 1.0*std::cos(phi_1_1) - 5.30287619362453e-17*std::cos(phi_1_2) + 5.30287619362454e-17), 
                    k_f*pwm_2*(-1.41421356237309*std::sin(phi_2_1)*std::sin(phi_2_2) + 3.06161699786838e-17*std::sin(phi_2_1)*std::cos(phi_2_2) + 3.06161699786838e-17*std::sin(phi_2_1) + 4.32978028117746e-17*std::sin(phi_2_2)*std::cos(phi_2_1) + 1.0*std::cos(phi_2_1)*std::cos(phi_2_2) + 1.0*std::cos(phi_2_1) + 5.30287619362453e-17*std::cos(phi_2_2) - 5.30287619362454e-17), 
                    k_f*pwm_3*(-1.41421356237309*std::sin(phi_3_1)*std::sin(phi_3_2) - 5.30287619362453e-17*std::sin(phi_3_1)*std::cos(phi_3_2) - 5.30287619362453e-17*std::sin(phi_3_1) - 7.49939943260923e-17*std::sin(phi_3_2)*std::cos(phi_3_1) + 1.0*std::cos(phi_3_1)*std::cos(phi_3_2) + 1.0*std::cos(phi_3_1) + 3.06161699786838e-17*std::cos(phi_3_2) - 3.06161699786838e-17), 
                    k_f*std::pow(pwm_1, 2.0)*(-2.16489014058873e-17*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.5*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_1) - 0.707106781186547*std::sin(phi_1_2)*std::cos(phi_1_1) + 1.53080849893419e-17*std::cos(phi_1_1)*std::cos(phi_1_2) + 1.53080849893419e-17*std::cos(phi_1_1)), 
                    k_f*std::pow(pwm_1, 2.0)*(-1.53080849893419e-17*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.707106781186547*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_2)*std::cos(phi_1_1) + 2.65143809681227e-17*std::sin(phi_1_2) + 2.16489014058873e-17*std::cos(phi_1_1)*std::cos(phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(-2.16489014058873e-17*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.5*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.5*std::sin(phi_2_1) - 0.707106781186547*std::sin(phi_2_2)*std::cos(phi_2_1) + 1.53080849893419e-17*std::cos(phi_2_1)*std::cos(phi_2_2) + 1.53080849893419e-17*std::cos(phi_2_1)), 
                    k_f*std::pow(pwm_2, 2.0)*(-1.53080849893419e-17*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.707106781186547*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.5*std::sin(phi_2_2)*std::cos(phi_2_1) - 2.65143809681227e-17*std::sin(phi_2_2) + 2.16489014058873e-17*std::cos(phi_2_1)*std::cos(phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(3.74969971630462e-17*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.5*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.5*std::sin(phi_3_1) - 0.707106781186547*std::sin(phi_3_2)*std::cos(phi_3_1) - 2.65143809681227e-17*std::cos(phi_3_1)*std::cos(phi_3_2) - 2.65143809681227e-17*std::cos(phi_3_1)), 
                    k_f*std::pow(pwm_3, 2.0)*(2.65143809681227e-17*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.707106781186547*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.5*std::sin(phi_3_2)*std::cos(phi_3_1) - 1.53080849893419e-17*std::sin(phi_3_2) - 3.74969971630462e-17*std::cos(phi_3_1)*std::cos(phi_3_2));
        
        allocation_matrix.row(3) << -k_f*pwm_1*(-6.50843912306034e-18*std::sin(phi_1_1) - 0.0269609964658858*std::sin(phi_1_2) - 1.73472347597681e-18*std::sin(2*phi_1_2) - 4.81482486096809e-35*std::sin(phi_1_1 - 2*phi_1_2) + 9.53138842102274e-19*std::sin(phi_1_1 - phi_1_2) - 1.01574617198139e-17*std::sin(phi_1_1 + phi_1_2) + 4.81482486096809e-35*std::sin(phi_1_1 + 2*phi_1_2) + 8.67361737988404e-19*std::sin(2*phi_1_1 - 2*phi_1_2) - 8.67361737988404e-19*std::sin(2*phi_1_1 + 2*phi_1_2) - 0.0531454385671997*std::cos(phi_1_1) - 7.22223729145213e-35*std::cos(2*phi_1_1) + 9.62964972193618e-35*std::cos(2*phi_1_2) + 0.00778296928359985*std::cos(phi_1_1 - phi_1_2) - 0.0829419692835998*std::cos(phi_1_1 + phi_1_2) - 1.73472347597681e-18*std::cos(phi_1_1 + 2*phi_1_2) - 9.62964972193618e-35*std::cos(2*phi_1_1 - phi_1_2) + 9.62964972193618e-35*std::cos(2*phi_1_1 + phi_1_2) + 9.62964972193618e-35*std::cos(2*phi_1_1 + 2*phi_1_2) - 1.20370621524202e-34), 
                    k_f*pwm_2*(-6.50843912306034e-18*std::sin(phi_2_1) + 0.0269609964658858*std::sin(phi_2_2) + 1.73472347597681e-18*std::sin(2*phi_2_2) - 4.81482486096809e-35*std::sin(phi_2_1 - 2*phi_2_2) + 9.53138842102274e-19*std::sin(phi_2_1 - phi_2_2) - 1.01574617198139e-17*std::sin(phi_2_1 + phi_2_2) + 4.81482486096809e-35*std::sin(phi_2_1 + 2*phi_2_2) - 8.67361737988404e-19*std::sin(2*phi_2_1 - 2*phi_2_2) + 8.67361737988404e-19*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.0531454385671997*std::cos(phi_2_1) + 7.22223729145213e-35*std::cos(2*phi_2_1) - 9.62964972193618e-35*std::cos(2*phi_2_2) + 0.00778296928359985*std::cos(phi_2_1 - phi_2_2) - 0.0829419692835998*std::cos(phi_2_1 + phi_2_2) - 1.73472347597681e-18*std::cos(phi_2_1 + 2*phi_2_2) + 9.62964972193618e-35*std::cos(2*phi_2_1 - phi_2_2) - 9.62964972193618e-35*std::cos(2*phi_2_1 + phi_2_2) - 9.62964972193618e-35*std::cos(2*phi_2_1 + 2*phi_2_2) + 1.20370621524202e-34), 
                    k_f*pwm_3*(-6.50843912306035e-18*std::sin(phi_3_1) - 1.73472347597681e-18*std::sin(2*phi_3_1) + 0.0155659385671997*std::sin(phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_2) + 4.81482486096809e-35*std::sin(phi_3_1 - 2*phi_3_2) + 9.53138842102275e-19*std::sin(phi_3_1 - phi_3_2) - 1.01574617198139e-17*std::sin(phi_3_1 + phi_3_2) - 1.44444745829043e-34*std::sin(phi_3_1 + 2*phi_3_2) + 1.30104260698261e-18*std::sin(2*phi_3_1 - 2*phi_3_2) + 4.33680868994202e-19*std::sin(2*phi_3_1 + 2*phi_3_2) + 0.0920505997889205*std::cos(phi_3_1) + 3.85185988877447e-34*std::cos(phi_3_2) - 0.0134804982329429*std::cos(phi_3_1 - phi_3_2) + 0.143659704879012*std::cos(phi_3_1 + phi_3_2) + 3.46944695195361e-18*std::cos(phi_3_1 + 2*phi_3_2) + 4.81482486096809e-35*std::cos(2*phi_3_1 - 2*phi_3_2) - 4.81482486096809e-35*std::cos(2*phi_3_1 + 2*phi_3_2) + 3.85185988877447e-34), 
                    k_f*std::pow(pwm_1, 2.0)*(0.0265727192835999*std::sin(phi_1_1) + 7.22223729145213e-35*std::sin(2*phi_1_1) - 0.00389148464179993*std::sin(phi_1_1 - phi_1_2) + 0.0414709846417999*std::sin(phi_1_1 + phi_1_2) + 8.67361737988404e-19*std::sin(phi_1_1 + 2*phi_1_2) - 2.40741243048404e-35*std::sin(2*phi_1_1 - 2*phi_1_2) + 4.81482486096809e-35*std::sin(2*phi_1_1 - phi_1_2) - 4.81482486096809e-35*std::sin(2*phi_1_1 + phi_1_2) - 7.22223729145213e-35*std::sin(2*phi_1_1 + 2*phi_1_2) - 3.25421956153017e-18*std::cos(phi_1_1) - 6.01853107621011e-35*std::cos(phi_1_1 - 2*phi_1_2) + 4.76569421051137e-19*std::cos(phi_1_1 - phi_1_2) - 5.07873085990693e-18*std::cos(phi_1_1 + phi_1_2) + 3.61111864572607e-35*std::cos(phi_1_1 + 2*phi_1_2)), 
                    k_f*std::pow(pwm_1, 2.0)*(-9.62964972193618e-35*std::sin(2*phi_1_2) + 0.00389148464179993*std::sin(phi_1_1 - phi_1_2) + 0.0414709846417999*std::sin(phi_1_1 + phi_1_2) + 1.73472347597681e-18*std::sin(phi_1_1 + 2*phi_1_2) - 2.40741243048404e-35*std::sin(2*phi_1_1 - phi_1_2) - 2.40741243048404e-35*std::sin(2*phi_1_1 + phi_1_2) - 9.62964972193618e-35*std::sin(2*phi_1_1 + 2*phi_1_2) + 4.81482486096809e-35*std::cos(phi_1_1) - 0.0134804982329429*std::cos(phi_1_2) - 1.73472347597681e-18*std::cos(2*phi_1_2) + 2.40741243048404e-35*std::cos(phi_1_1 - 2*phi_1_2) - 4.76569421051137e-19*std::cos(phi_1_1 - phi_1_2) - 5.07873085990693e-18*std::cos(phi_1_1 + phi_1_2) + 2.40741243048404e-35*std::cos(phi_1_1 + 2*phi_1_2) - 8.67361737988404e-19*std::cos(2*phi_1_1 - 2*phi_1_2) - 8.67361737988404e-19*std::cos(2*phi_1_1 + 2*phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.0265727192835999*std::sin(phi_2_1) - 7.22223729145213e-35*std::sin(2*phi_2_1) - 0.00389148464179993*std::sin(phi_2_1 - phi_2_2) + 0.0414709846417999*std::sin(phi_2_1 + phi_2_2) + 8.67361737988404e-19*std::sin(phi_2_1 + 2*phi_2_2) + 2.40741243048404e-35*std::sin(2*phi_2_1 - 2*phi_2_2) - 4.81482486096809e-35*std::sin(2*phi_2_1 - phi_2_2) + 4.81482486096809e-35*std::sin(2*phi_2_1 + phi_2_2) + 7.22223729145213e-35*std::sin(2*phi_2_1 + 2*phi_2_2) - 3.25421956153017e-18*std::cos(phi_2_1) + 4.76569421051137e-19*std::cos(phi_2_1 - phi_2_2) - 5.07873085990693e-18*std::cos(phi_2_1 + phi_2_2) + 4.81482486096809e-35*std::cos(phi_2_1 + 2*phi_2_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(-1.20370621524202e-35*std::sin(phi_2_2) + 9.62964972193618e-35*std::sin(2*phi_2_2) + 0.00389148464179993*std::sin(phi_2_1 - phi_2_2) + 0.0414709846417999*std::sin(phi_2_1 + phi_2_2) + 1.73472347597681e-18*std::sin(phi_2_1 + 2*phi_2_2) - 2.40741243048404e-35*std::sin(2*phi_2_1 - 2*phi_2_2) + 1.80555932286303e-35*std::sin(2*phi_2_1 - phi_2_2) + 3.00926553810506e-35*std::sin(2*phi_2_1 + phi_2_2) + 7.22223729145213e-35*std::sin(2*phi_2_1 + 2*phi_2_2) - 4.81482486096809e-35*std::cos(phi_2_1) + 0.0134804982329429*std::cos(phi_2_2) + 1.73472347597681e-18*std::cos(2*phi_2_2) + 7.22223729145213e-35*std::cos(phi_2_1 - 2*phi_2_2) - 4.76569421051137e-19*std::cos(phi_2_1 - phi_2_2) - 5.07873085990693e-18*std::cos(phi_2_1 + phi_2_2) + 7.22223729145213e-35*std::cos(phi_2_1 + 2*phi_2_2) + 8.67361737988404e-19*std::cos(2*phi_2_1 - 2*phi_2_2) + 8.67361737988404e-19*std::cos(2*phi_2_1 + 2*phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(-0.0460252998944602*std::sin(phi_3_1) + 0.00674024911647145*std::sin(phi_3_1 - phi_3_2) - 0.0718298524395061*std::sin(phi_3_1 + phi_3_2) - 1.73472347597681e-18*std::sin(phi_3_1 + 2*phi_3_2) - 2.40741243048404e-35*std::sin(2*phi_3_1 - 2*phi_3_2) + 2.40741243048404e-35*std::sin(2*phi_3_1 + 2*phi_3_2) - 3.25421956153017e-18*std::cos(phi_3_1) - 1.73472347597681e-18*std::cos(2*phi_3_1) + 2.40741243048404e-35*std::cos(phi_3_1 - 2*phi_3_2) + 4.76569421051137e-19*std::cos(phi_3_1 - phi_3_2) - 5.07873085990693e-18*std::cos(phi_3_1 + phi_3_2) - 7.22223729145213e-35*std::cos(phi_3_1 + 2*phi_3_2) + 1.73472347597681e-18*std::cos(2*phi_3_1 - 2*phi_3_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(-1.92592994438724e-34*std::sin(phi_3_2) - 0.00674024911647145*std::sin(phi_3_1 - phi_3_2) - 0.0718298524395061*std::sin(phi_3_1 + phi_3_2) - 3.46944695195361e-18*std::sin(phi_3_1 + 2*phi_3_2) + 2.40741243048404e-35*std::sin(2*phi_3_1 - 2*phi_3_2) + 2.40741243048404e-35*std::sin(2*phi_3_1 + 2*phi_3_2) - 2.40741243048404e-35*std::cos(phi_3_1) + 0.00778296928359986*std::cos(phi_3_2) + 8.67361737988404e-19*std::cos(2*phi_3_2) - 3.61111864572607e-35*std::cos(phi_3_1 - 2*phi_3_2) - 4.76569421051137e-19*std::cos(phi_3_1 - phi_3_2) - 5.07873085990693e-18*std::cos(phi_3_1 + phi_3_2) - 1.32407683676622e-34*std::cos(phi_3_1 + 2*phi_3_2) - 1.30104260698261e-18*std::cos(2*phi_3_1 - 2*phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1 + 2*phi_3_2));

        allocation_matrix.row(4) << k_f*pwm_1*(3.85185988877447e-34*std::sin(phi_1_1) - 0.0155659385671997*std::sin(phi_1_2) - 8.67361737988404e-19*std::sin(2*phi_1_2) - 9.62964972193618e-35*std::sin(phi_1_1 - 2*phi_1_2) - 1.92592994438724e-34*std::sin(phi_1_1 - phi_1_2) + 5.77778983316171e-34*std::sin(phi_1_1 + phi_1_2) + 9.62964972193618e-35*std::sin(phi_1_1 + 2*phi_1_2) + 4.33680868994202e-19*std::sin(2*phi_1_1 - 2*phi_1_2) - 4.33680868994202e-19*std::sin(2*phi_1_1 + 2*phi_1_2) + 0.0920505997889205*std::cos(phi_1_1) - 2.16667118743564e-34*std::cos(2*phi_1_1) - 9.62964972193618e-35*std::cos(phi_1_2) - 2.64815367353245e-34*std::cos(2*phi_1_2) - 0.0134804982329429*std::cos(phi_1_1 - phi_1_2) + 0.143659704879012*std::cos(phi_1_1 + phi_1_2) + 3.46944695195361e-18*std::cos(phi_1_1 + 2*phi_1_2) + 1.32407683676622e-34*std::cos(2*phi_1_1 - 2*phi_1_2) + 4.81482486096809e-35*std::cos(2*phi_1_1 - phi_1_2) + 4.81482486096809e-35*std::cos(2*phi_1_1 + phi_1_2) + 1.32407683676622e-34*std::cos(2*phi_1_1 + 2*phi_1_2) + 2.40741243048404e-35), 
                    k_f*pwm_2*(-3.85185988877447e-34*std::sin(phi_2_1) - 0.0155659385671997*std::sin(phi_2_2) - 8.67361737988404e-19*std::sin(2*phi_2_2) + 9.62964972193618e-35*std::sin(phi_2_1 - 2*phi_2_2) + 3.85185988877447e-34*std::sin(phi_2_1 - phi_2_2) - 3.85185988877447e-34*std::sin(phi_2_1 + phi_2_2) - 9.62964972193618e-35*std::sin(phi_2_1 + 2*phi_2_2) + 4.33680868994202e-19*std::sin(2*phi_2_1 - 2*phi_2_2) - 4.33680868994202e-19*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.0920505997889205*std::cos(phi_2_1) - 2.16667118743564e-34*std::cos(2*phi_2_1) - 9.62964972193618e-35*std::cos(phi_2_2) - 2.64815367353245e-34*std::cos(2*phi_2_2) + 0.0134804982329429*std::cos(phi_2_1 - phi_2_2) - 0.143659704879012*std::cos(phi_2_1 + phi_2_2) - 3.46944695195361e-18*std::cos(phi_2_1 + 2*phi_2_2) + 1.32407683676622e-34*std::cos(2*phi_2_1 - 2*phi_2_2) + 4.81482486096809e-35*std::cos(2*phi_2_1 - phi_2_2) + 4.81482486096809e-35*std::cos(2*phi_2_1 + phi_2_2) + 1.32407683676622e-34*std::cos(2*phi_2_1 + 2*phi_2_2) + 2.40741243048404e-35), 
                    k_f*pwm_3*(0.0269609964658858*std::sin(phi_3_2) + 1.73472347597681e-18*std::sin(2*phi_3_2) + 9.62964972193618e-35*std::sin(phi_3_1 - 2*phi_3_2) - 3.85185988877447e-34*std::sin(phi_3_1 - phi_3_2) - 9.62964972193618e-35*std::sin(phi_3_1 + 2*phi_3_2) - 8.67361737988404e-19*std::sin(2*phi_3_1 - 2*phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_1 + 2*phi_3_2) - 0.0531454385671997*std::cos(phi_3_1) - 2.40741243048404e-34*std::cos(2*phi_3_1) - 1.44444745829043e-34*std::cos(2*phi_3_2) + 0.00778296928359986*std::cos(phi_3_1 - phi_3_2) - 0.0829419692835998*std::cos(phi_3_1 + phi_3_2) + 1.68518870133883e-34*std::cos(2*phi_3_1 - 2*phi_3_2) + 3.85185988877447e-34*std::cos(2*phi_3_1 - phi_3_2) - 3.85185988877447e-34*std::cos(2*phi_3_1 + phi_3_2) + 1.68518870133883e-34*std::cos(2*phi_3_1 + 2*phi_3_2) + 2.40741243048404e-34), 
                    k_f*std::pow(pwm_1, 2.0)*(-0.0460252998944602*std::sin(phi_1_1) + 1.92592994438724e-34*std::sin(2*phi_1_1) + 0.00674024911647145*std::sin(phi_1_1 - phi_1_2) - 0.0718298524395061*std::sin(phi_1_1 + phi_1_2) - 1.73472347597681e-18*std::sin(phi_1_1 + 2*phi_1_2) - 9.62964972193618e-35*std::sin(2*phi_1_1 - 2*phi_1_2) - 9.62964972193618e-35*std::sin(2*phi_1_1 - phi_1_2) - 9.62964972193618e-35*std::sin(2*phi_1_1 + phi_1_2) - 9.62964972193618e-35*std::sin(2*phi_1_1 + 2*phi_1_2) + 1.92592994438724e-34*std::cos(phi_1_1) + 1.51091960431229e-36*std::cos(2*phi_1_1) - 2.49079348109414e-35*std::cos(phi_1_2) + 8.80628480508457e-36*std::cos(2*phi_1_2) - 2.40741243048404e-35*std::cos(phi_1_1 - 2*phi_1_2) + 9.62964972193618e-35*std::cos(phi_1_1 - phi_1_2) + 2.88889491658085e-34*std::cos(phi_1_1 + phi_1_2) + 2.40741243048404e-35*std::cos(phi_1_1 + 2*phi_1_2) + 8.67361737988404e-19*std::cos(2*phi_1_1 - 2*phi_1_2) - 1.24539674054707e-35*std::cos(2*phi_1_1 - phi_1_2) - 1.24539674054707e-35*std::cos(2*phi_1_1 + phi_1_2) - 8.67361737988404e-19*std::cos(2*phi_1_1 + 2*phi_1_2) - 3.3714219616026e-35), 
                    k_f*std::pow(pwm_1, 2.0)*(2.40741243048404e-35*std::sin(phi_1_2) + 1.92592994438724e-34*std::sin(2*phi_1_2) - 0.00674024911647145*std::sin(phi_1_1 - phi_1_2) - 0.0718298524395061*std::sin(phi_1_1 + phi_1_2) - 3.46944695195361e-18*std::sin(phi_1_1 + 2*phi_1_2) + 1.44444745829043e-34*std::sin(2*phi_1_1 - 2*phi_1_2) + 1.20370621524202e-35*std::sin(2*phi_1_1 - phi_1_2) - 1.20370621524202e-35*std::sin(2*phi_1_1 + phi_1_2) - 1.44444745829043e-34*std::sin(2*phi_1_1 + 2*phi_1_2) - 0.00778296928359986*std::cos(phi_1_2) - 8.67361737988404e-19*std::cos(2*phi_1_2) + 4.81482486096809e-35*std::cos(phi_1_1 - 2*phi_1_2) + 1.92592994438724e-34*std::cos(phi_1_1 + phi_1_2) + 4.81482486096809e-35*std::cos(phi_1_1 + 2*phi_1_2) - 4.33680868994202e-19*std::cos(2*phi_1_1 - 2*phi_1_2) - 4.33680868994202e-19*std::cos(2*phi_1_1 + 2*phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(0.0460252998944602*std::sin(phi_2_1) + 1.92592994438724e-34*std::sin(2*phi_2_1) - 0.00674024911647145*std::sin(phi_2_1 - phi_2_2) + 0.0718298524395061*std::sin(phi_2_1 + phi_2_2) + 1.73472347597681e-18*std::sin(phi_2_1 + 2*phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 - 2*phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 - phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 + phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 + 2*phi_2_2) - 1.92592994438724e-34*std::cos(phi_2_1) + 1.51091960431229e-36*std::cos(2*phi_2_1) - 2.49079348109414e-35*std::cos(phi_2_2) + 8.80628480508457e-36*std::cos(2*phi_2_2) + 2.40741243048404e-35*std::cos(phi_2_1 - 2*phi_2_2) - 9.62964972193618e-35*std::cos(phi_2_1 - phi_2_2) - 2.88889491658085e-34*std::cos(phi_2_1 + phi_2_2) - 2.40741243048404e-35*std::cos(phi_2_1 + 2*phi_2_2) + 8.67361737988404e-19*std::cos(2*phi_2_1 - 2*phi_2_2) - 1.24539674054707e-35*std::cos(2*phi_2_1 - phi_2_2) - 1.24539674054707e-35*std::cos(2*phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_1 + 2*phi_2_2) - 3.3714219616026e-35), 
                    k_f*std::pow(pwm_2, 2.0)*(2.40741243048404e-35*std::sin(phi_2_2) + 1.92592994438724e-34*std::sin(2*phi_2_2) + 0.00674024911647145*std::sin(phi_2_1 - phi_2_2) + 0.0718298524395061*std::sin(phi_2_1 + phi_2_2) + 3.46944695195361e-18*std::sin(phi_2_1 + 2*phi_2_2) + 1.44444745829043e-34*std::sin(2*phi_2_1 - 2*phi_2_2) + 1.20370621524202e-35*std::sin(2*phi_2_1 - phi_2_2) - 1.20370621524202e-35*std::sin(2*phi_2_1 + phi_2_2) - 1.44444745829043e-34*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.00778296928359986*std::cos(phi_2_2) - 8.67361737988404e-19*std::cos(2*phi_2_2) - 4.81482486096809e-35*std::cos(phi_2_1 - 2*phi_2_2) - 1.92592994438724e-34*std::cos(phi_2_1 + phi_2_2) - 4.81482486096809e-35*std::cos(phi_2_1 + 2*phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 - 2*phi_2_2) - 4.33680868994202e-19*std::cos(2*phi_2_1 + 2*phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(0.0265727192835999*std::sin(phi_3_1) + 3.85185988877447e-34*std::sin(2*phi_3_1) - 3.64768260038614e-36*std::sin(phi_3_1 - 2*phi_3_2) - 0.00389148464179993*std::sin(phi_3_1 - phi_3_2) + 0.0414709846417999*std::sin(phi_3_1 + phi_3_2) + 2.12602522105553e-35*std::sin(phi_3_1 + 2*phi_3_2) - 1.92592994438724e-34*std::sin(2*phi_3_1 - 2*phi_3_2) - 1.92592994438724e-34*std::sin(2*phi_3_1 - phi_3_2) - 1.92592994438724e-34*std::sin(2*phi_3_1 + phi_3_2) - 1.92592994438724e-34*std::sin(2*phi_3_1 + 2*phi_3_2) - 2.61698952082074e-36*std::cos(2*phi_3_1) - 4.31418086041641e-35*std::cos(phi_3_2) + 1.52529327083283e-35*std::cos(2*phi_3_2) + 2.40741243048404e-35*std::cos(phi_3_1 - 2*phi_3_2) - 1.92592994438724e-34*std::cos(phi_3_1 - phi_3_2) - 2.40741243048404e-35*std::cos(phi_3_1 + 2*phi_3_2) + 2.28793990624924e-35*std::cos(2*phi_3_1 - 2*phi_3_2) + 2.1570904302082e-35*std::cos(2*phi_3_1 - phi_3_2) + 2.1570904302082e-35*std::cos(2*phi_3_1 + phi_3_2) + 2.28793990624924e-35*std::cos(2*phi_3_1 + 2*phi_3_2) - 5.83947413124924e-35), 
                    k_f*std::pow(pwm_3, 2.0)*(2.49079348109414e-35*std::sin(phi_3_1) + 4.81482486096809e-35*std::sin(phi_3_2) + 1.92592994438724e-34*std::sin(2*phi_3_2) + 1.24539674054707e-35*std::sin(phi_3_1 - 2*phi_3_2) + 0.00389148464179993*std::sin(phi_3_1 - phi_3_2) + 0.0414709846417999*std::sin(phi_3_1 + phi_3_2) + 1.24539674054707e-35*std::sin(phi_3_1 + 2*phi_3_2) + 9.62964972193618e-35*std::sin(2*phi_3_1 - 2*phi_3_2) + 2.40741243048404e-35*std::sin(2*phi_3_1 - phi_3_2) - 2.40741243048404e-35*std::sin(2*phi_3_1 + phi_3_2) - 9.62964972193618e-35*std::sin(2*phi_3_1 + 2*phi_3_2) + 0.0134804982329429*std::cos(phi_3_2) + 1.73472347597681e-18*std::cos(2*phi_3_2) - 4.81482486096809e-35*std::cos(phi_3_1 - 2*phi_3_2) + 9.62964972193618e-35*std::cos(phi_3_1 - phi_3_2) + 9.62964972193618e-35*std::cos(phi_3_1 + phi_3_2) - 4.81482486096809e-35*std::cos(phi_3_1 + 2*phi_3_2) + 8.67361737988404e-19*std::cos(2*phi_3_1 - 2*phi_3_2) + 8.67361737988404e-19*std::cos(2*phi_3_1 + 2*phi_3_2));

        allocation_matrix.row(5) << k_f*pwm_1*(-0.106290877134399*std::sin(phi_1_1) + 9.62964972193618e-35*std::sin(2*phi_1_1) + 1.65088490118851e-18*std::sin(phi_1_2) + 9.62964972193618e-35*std::sin(2*phi_1_2) - 8.67361737988404e-19*std::sin(phi_1_1 - 2*phi_1_2) + 0.0155659385671997*std::sin(phi_1_1 - phi_1_2) - 0.1658839385672*std::sin(phi_1_1 + phi_1_2) - 8.67361737988404e-19*std::sin(phi_1_1 + 2*phi_1_2) + 9.62964972193618e-35*std::sin(2*phi_1_1 - phi_1_2) + 9.62964972193618e-35*std::sin(2*phi_1_1 + phi_1_2) + 9.62964972193618e-35*std::sin(2*phi_1_1 + 2*phi_1_2) + 3.25421956153017e-18*std::cos(phi_1_1) + 4.33680868994202e-19*std::cos(2*phi_1_1) + 4.81482486096809e-35*std::cos(phi_1_1 - 2*phi_1_2) - 4.76569421051136e-19*std::cos(phi_1_1 - phi_1_2) + 5.07873085990693e-18*std::cos(phi_1_1 + phi_1_2) + 4.81482486096809e-35*std::cos(phi_1_1 + 2*phi_1_2) - 4.33680868994202e-19), 
                    k_f*pwm_2*(-0.106290877134399*std::sin(phi_2_1) - 9.62964972193618e-35*std::sin(2*phi_2_1) - 1.65088490118851e-18*std::sin(phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_2) - 8.67361737988404e-19*std::sin(phi_2_1 - 2*phi_2_2) + 0.0155659385671997*std::sin(phi_2_1 - phi_2_2) - 0.1658839385672*std::sin(phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::sin(phi_2_1 + 2*phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 - phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 + phi_2_2) - 9.62964972193618e-35*std::sin(2*phi_2_1 + 2*phi_2_2) + 3.25421956153017e-18*std::cos(phi_2_1) - 4.33680868994202e-19*std::cos(2*phi_2_1) + 4.81482486096809e-35*std::cos(phi_2_1 - 2*phi_2_2) - 4.76569421051136e-19*std::cos(phi_2_1 - phi_2_2) + 5.07873085990693e-18*std::cos(phi_2_1 + phi_2_2) + 4.81482486096809e-35*std::cos(phi_2_1 + 2*phi_2_2) + 4.33680868994202e-19), 
                    2*k_f*pwm_3*(-0.0531454385671997*std::sin(phi_3_1) - 7.22223729145213e-35*std::sin(2*phi_3_1) - 4.76569421051137e-19*std::sin(phi_3_2) - 7.22223729145213e-35*std::sin(2*phi_3_2) - 4.33680868994202e-19*std::sin(phi_3_1 - 2*phi_3_2) + 0.00778296928359987*std::sin(phi_3_1 - phi_3_2) - 0.0829419692835999*std::sin(phi_3_1 + phi_3_2) - 4.33680868994202e-19*std::sin(phi_3_1 + 2*phi_3_2) + 1.20370621524202e-35*std::sin(2*phi_3_1 - 2*phi_3_2) + 3.61111864572607e-35*std::sin(2*phi_3_1 + 2*phi_3_2) - 2.81823680977739e-18*std::cos(phi_3_1) + 4.12721225297128e-19*std::cos(phi_3_1 - phi_3_2) - 4.39830994366339e-18*std::cos(phi_3_1 + phi_3_2) - 9.62964972193618e-35*std::cos(phi_3_1 + 2*phi_3_2) + 4.33680868994202e-19*std::cos(2*phi_3_1 - 2*phi_3_2) - 4.33680868994202e-19*std::cos(2*phi_3_1 + 2*phi_3_2) + 3.46944695195361e-18), 
                    k_f*std::pow(pwm_1, 2.0)*(-1.62710978076509e-18*std::sin(phi_1_1) - 4.33680868994202e-19*std::sin(2*phi_1_1) - 4.33680868994202e-19*std::sin(phi_1_2) - 2.40741243048404e-35*std::sin(phi_1_1 - 2*phi_1_2) + 2.38284710525568e-19*std::sin(phi_1_1 - phi_1_2) - 2.53936542995347e-18*std::sin(phi_1_1 + phi_1_2) - 2.40741243048404e-35*std::sin(phi_1_1 + 2*phi_1_2) + 6.50521303491303e-19*std::sin(2*phi_1_1 - phi_1_2) - 6.50521303491303e-19*std::sin(2*phi_1_1 + phi_1_2) - 0.0531454385671997*std::cos(phi_1_1) + 9.62964972193618e-35*std::cos(2*phi_1_1) - 4.33680868994202e-19*std::cos(phi_1_1 - 2*phi_1_2) + 0.00778296928359986*std::cos(phi_1_1 - phi_1_2) - 0.0829419692835998*std::cos(phi_1_1 + phi_1_2) - 4.33680868994202e-19*std::cos(phi_1_1 + 2*phi_1_2) + 4.81482486096809e-35*std::cos(2*phi_1_1 - 2*phi_1_2) + 9.62964972193618e-35*std::cos(2*phi_1_1 - phi_1_2) + 9.62964972193618e-35*std::cos(2*phi_1_1 + phi_1_2) + 4.81482486096809e-35*std::cos(2*phi_1_1 + 2*phi_1_2)), 
                    k_f*std::pow(pwm_1, 2.0)*(2.16840434497101e-19*std::sin(phi_1_2) + 4.81482486096809e-35*std::sin(phi_1_1 - 2*phi_1_2) - 2.38284710525568e-19*std::sin(phi_1_1 - phi_1_2) - 2.53936542995347e-18*std::sin(phi_1_1 + phi_1_2) - 4.81482486096809e-35*std::sin(phi_1_1 + 2*phi_1_2) - 1.0842021724855e-19*std::sin(2*phi_1_1 - phi_1_2) - 3.25260651745651e-19*std::sin(2*phi_1_1 + phi_1_2) + 2.60208521396521e-18*std::cos(phi_1_1) + 8.25442450594254e-19*std::cos(phi_1_2) + 9.62964972193618e-35*std::cos(2*phi_1_2) + 4.33680868994202e-19*std::cos(phi_1_1 - 2*phi_1_2) - 0.00778296928359986*std::cos(phi_1_1 - phi_1_2) - 0.0829419692835998*std::cos(phi_1_1 + phi_1_2) - 1.30104260698261e-18*std::cos(phi_1_1 + 2*phi_1_2) - 4.81482486096809e-35*std::cos(2*phi_1_1 - 2*phi_1_2) - 4.81482486096809e-35*std::cos(2*phi_1_1 - phi_1_2) + 4.81482486096809e-35*std::cos(2*phi_1_1 + phi_1_2) + 1.44444745829043e-34*std::cos(2*phi_1_1 + 2*phi_1_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(-1.62710978076509e-18*std::sin(phi_2_1) + 4.33680868994202e-19*std::sin(2*phi_2_1) - 2.40741243048404e-35*std::sin(phi_2_1 - 2*phi_2_2) + 2.38284710525568e-19*std::sin(phi_2_1 - phi_2_2) - 2.53936542995347e-18*std::sin(phi_2_1 + phi_2_2) - 2.40741243048404e-35*std::sin(phi_2_1 + 2*phi_2_2) - 0.0531454385671997*std::cos(phi_2_1) - 9.62964972193618e-35*std::cos(2*phi_2_1) - 6.50521303491303e-19*std::cos(phi_2_1 - 2*phi_2_2) + 0.00778296928359985*std::cos(phi_2_1 - phi_2_2) - 0.0829419692835999*std::cos(phi_2_1 + phi_2_2) - 6.50521303491303e-19*std::cos(phi_2_1 + 2*phi_2_2) - 4.81482486096809e-35*std::cos(2*phi_2_1 - 2*phi_2_2) - 9.62964972193618e-35*std::cos(2*phi_2_1 - phi_2_2) - 9.62964972193618e-35*std::cos(2*phi_2_1 + phi_2_2) - 4.81482486096809e-35*std::cos(2*phi_2_1 + 2*phi_2_2)), 
                    k_f*std::pow(pwm_2, 2.0)*(4.81482486096809e-35*std::sin(phi_2_1 - 2*phi_2_2) - 2.38284710525568e-19*std::sin(phi_2_1 - phi_2_2) - 2.53936542995347e-18*std::sin(phi_2_1 + phi_2_2) - 4.81482486096809e-35*std::sin(phi_2_1 + 2*phi_2_2) - 8.25442450594254e-19*std::cos(phi_2_2) - 9.62964972193618e-35*std::cos(2*phi_2_2) + 8.67361737988404e-19*std::cos(phi_2_1 - 2*phi_2_2) - 0.00778296928359985*std::cos(phi_2_1 - phi_2_2) - 0.0829419692835999*std::cos(phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::cos(phi_2_1 + 2*phi_2_2) + 4.81482486096809e-35*std::cos(2*phi_2_1 - 2*phi_2_2) + 4.81482486096809e-35*std::cos(2*phi_2_1 - phi_2_2) - 4.81482486096809e-35*std::cos(2*phi_2_1 + phi_2_2) - 1.44444745829043e-34*std::cos(2*phi_2_1 + 2*phi_2_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(2.81823680977739e-18*std::sin(phi_3_1) - 4.12721225297128e-19*std::sin(phi_3_1 - phi_3_2) + 4.39830994366339e-18*std::sin(phi_3_1 + phi_3_2) + 9.62964972193618e-35*std::sin(phi_3_1 + 2*phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 - 2*phi_3_2) + 4.33680868994202e-19*std::sin(2*phi_3_1 + 2*phi_3_2) - 0.0531454385671997*std::cos(phi_3_1) - 1.44444745829043e-34*std::cos(2*phi_3_1) - 8.67361737988404e-19*std::cos(phi_3_1 - 2*phi_3_2) + 0.00778296928359987*std::cos(phi_3_1 - phi_3_2) - 0.0829419692835999*std::cos(phi_3_1 + phi_3_2) + 8.67361737988404e-19*std::cos(phi_3_1 + 2*phi_3_2) + 4.81482486096809e-35*std::cos(2*phi_3_1 - 2*phi_3_2) + 4.81482486096809e-35*std::cos(2*phi_3_1 + 2*phi_3_2)), 
                    k_f*std::pow(pwm_3, 2.0)*(4.12721225297128e-19*std::sin(phi_3_1 - phi_3_2) + 4.39830994366339e-18*std::sin(phi_3_1 + phi_3_2) + 1.92592994438724e-34*std::sin(phi_3_1 + 2*phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_1 - 2*phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 - phi_3_2) - 4.33680868994202e-19*std::sin(2*phi_3_1 + phi_3_2) + 8.67361737988404e-19*std::sin(2*phi_3_1 + 2*phi_3_2) - 4.76569421051137e-19*std::cos(phi_3_2) - 1.44444745829043e-34*std::cos(2*phi_3_2) + 8.67361737988404e-19*std::cos(phi_3_1 - 2*phi_3_2) - 0.00778296928359987*std::cos(phi_3_1 - phi_3_2) - 0.0829419692835999*std::cos(phi_3_1 + phi_3_2) - 8.67361737988404e-19*std::cos(phi_3_1 + 2*phi_3_2) - 2.40741243048404e-35*std::cos(2*phi_3_1 - 2*phi_3_2) + 7.22223729145213e-35*std::cos(2*phi_3_1 + 2*phi_3_2));
    }

    else{
        ROS_ERROR("Invalid drone type. Please check whether you have defined the drone version");
    
    } 
    
}

void AveroJerkAllocator::computeWrench(const Vector9d& omav_state){
   
    double k_f = params_.k_f;

    double pwm_1 = u(0);
    double pwm_2 = u(1);
    double pwm_3 = u(2);

    double phi_1_1;
    double phi_1_2;
    double phi_2_1;
    double phi_2_2;
    double phi_3_1;
    double phi_3_2;

    if(use_joint_feedback){
        phi_1_1 = omav_state(3);
        phi_1_2 = omav_state(4);
        phi_2_1 = omav_state(5);
        phi_2_2 = omav_state(6);
        phi_3_1 = omav_state(7);
        phi_3_2 = omav_state(8);
    }else{
        phi_1_1 = u(3);
        phi_1_2 = u(4);
        phi_2_1 = u(5);
        phi_2_2 = u(6);
        phi_3_1 = u(7);
        phi_3_2 = u(8);
    }

    

    if (drone_version){
        //updated values for get_thrust_base_vector with -1 in the function

        wrench_alloc.row(0) <<  k_f*std::pow(pwm_1,2)*(-0.5*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_1) - 0.707106781186547*std::sin(phi_1_2)*std::cos(phi_1_1)) + k_f*std::pow(pwm_2,2)*(-0.209445028587455*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.25*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.25*std::sin(phi_2_1) + 0.353553390593274*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.1481*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.1481*std::cos(phi_2_1) + 0.4069*std::cos(phi_2_2) - 0.4069) + k_f*std::pow(pwm_3,2)*(0.209445028587455*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.25*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.25*std::sin(phi_3_1) + 0.353553390593274*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.1481*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.1481*std::cos(phi_3_1) - 0.4069*std::cos(phi_3_2) + 0.4069);
        wrench_alloc.row(1) <<  k_f*std::pow(pwm_1,2)*(0.241830519165799*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.171*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.171*std::cos(phi_1_1) - 0.46985*std::cos(phi_1_2) + 0.46985) + k_f*std::pow(pwm_2,2)*(-0.1209152595829*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.433*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.433*std::sin(phi_2_1) - 0.61235447250755*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.0855*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0855*std::cos(phi_2_1) + 0.2349*std::cos(phi_2_2) - 0.2349) + k_f*std::pow(pwm_3,2)*(-0.1209152595829*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.433*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.433*std::sin(phi_3_1) + 0.61235447250755*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.0855*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0855*std::cos(phi_3_1) + 0.2349*std::cos(phi_3_2) - 0.2349);
        wrench_alloc.row(2) <<  k_f*std::pow(pwm_1,2)*(-0.664468242280999*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.46985*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.46985*std::cos(phi_1_1) - 0.171*std::cos(phi_1_2) + 0.171) + k_f*std::pow(pwm_2,2)*(-0.664468242280999*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.46985*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.46985*std::cos(phi_2_1) - 0.171*std::cos(phi_2_2) + 0.171) + k_f*std::pow(pwm_3,2)*(-0.664468242280999*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.46985*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.46985*std::cos(phi_3_1) - 0.171*std::cos(phi_3_2) + 0.171);
        wrench_alloc.row(3) <<  k_f*std::pow(pwm_1,2)*(-0.664468242280999*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.46985*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.46985*std::cos(phi_1_1) - 0.171*std::cos(phi_1_2) + 0.171)*(-0.00983663959984971*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.00695555456514185*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.0266288337648413*std::cos(phi_1_1) + 0.0191115047510637*std::cos(phi_1_2) - 0.229040012685816) + k_f*std::pow(pwm_1,2)*(-0.0270277492163122*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.0191115047510637*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.0731670031836881*std::cos(phi_1_1) - 0.00695555456514185*std::cos(phi_1_2) + 0.040539942895125)*(0.241830519165799*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.171*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.171*std::cos(phi_1_1) - 0.46985*std::cos(phi_1_2) + 0.46985) + k_f*std::pow(pwm_2,2)*(-0.664468242280999*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.46985*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.46985*std::cos(phi_2_1) - 0.171*std::cos(phi_2_2) + 0.171)*(0.00491831979992485*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.0176126030801545*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.0674285673694518*std::sin(phi_2_1) + 0.0249079821446487*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.00347777728257093*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.0133144168824206*std::cos(phi_2_1) - 0.0095547354815896*std::cos(phi_2_2) + 0.244639079450672) + k_f*std::pow(pwm_2,2)*(-0.0270277492163122*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.0191115047510637*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0731670031836881*std::cos(phi_2_1) - 0.00695555456514185*std::cos(phi_2_2) + 0.040539942895125)*(-0.1209152595829*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.433*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.433*std::sin(phi_2_1) - 0.61235447250755*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.0855*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0855*std::cos(phi_2_1) + 0.2349*std::cos(phi_2_2) - 0.2349) + k_f*std::pow(pwm_3,2)*(-0.664468242280999*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.46985*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.46985*std::cos(phi_3_1) - 0.171*std::cos(phi_3_2) + 0.171)*(0.00491831979992485*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.0176126030801545*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.0674285673694518*std::sin(phi_3_1) - 0.0249079821446487*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.00347777728257093*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.0133144168824206*std::cos(phi_3_1) - 0.0095547354815896*std::cos(phi_3_2) - 0.0116809205493283) + k_f*std::pow(pwm_3,2)*(-0.0270277492163122*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.0191115047510637*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0731670031836881*std::cos(phi_3_1) - 0.00695555456514185*std::cos(phi_3_2) + 0.040539942895125)*(-0.1209152595829*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.433*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.433*std::sin(phi_3_1) + 0.61235447250755*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.0855*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0855*std::cos(phi_3_1) + 0.2349*std::cos(phi_3_2) - 0.2349);
        wrench_alloc.row(4) <<  k_f*std::pow(pwm_1,2)*(-0.5*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_1) - 0.707106781186547*std::sin(phi_1_2)*std::cos(phi_1_1))*(0.0270277492163122*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.0191115047510637*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.0731670031836881*std::cos(phi_1_1) + 0.00695555456514185*std::cos(phi_1_2) - 0.040539942895125) + k_f*std::pow(pwm_1,2)*(-0.020337878845444*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.0778620870316996*std::sin(phi_1_1) - 0.0287621040931278*std::sin(phi_1_2)*std::cos(phi_1_1) - 0.15073)*(-0.664468242280999*std::sin(phi_1_1)*std::sin(phi_1_2) + 0.46985*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.46985*std::cos(phi_1_1) - 0.171*std::cos(phi_1_2) + 0.171) + k_f*std::pow(pwm_2,2)*(-0.664468242280999*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.46985*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.46985*std::cos(phi_2_1) - 0.171*std::cos(phi_2_2) + 0.171)*(-0.00851933523238445*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.010168939422722*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.0389310435158498*std::sin(phi_2_1) + 0.0143810520465639*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.00602407971402052*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0230627501787894*std::cos(phi_2_1) + 0.0165509658044223*std::cos(phi_2_2) - 0.127136098035242) + k_f*std::pow(pwm_2,2)*(0.0270277492163122*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.0191115047510637*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.0731670031836881*std::cos(phi_2_1) + 0.00695555456514185*std::cos(phi_2_2) - 0.040539942895125)*(-0.209445028587455*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.25*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.25*std::sin(phi_2_1) + 0.353553390593274*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.1481*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.1481*std::cos(phi_2_1) + 0.4069*std::cos(phi_2_2) - 0.4069) + k_f*std::pow(pwm_3,2)*(-0.664468242280999*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.46985*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.46985*std::cos(phi_3_1) - 0.171*std::cos(phi_3_2) + 0.171)*(0.00851933523238445*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.010168939422722*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.0389310435158498*std::sin(phi_3_1) + 0.0143810520465639*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.00602407971402052*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.0230627501787894*std::cos(phi_3_1) - 0.0165509658044223*std::cos(phi_3_2) + 0.268166098035242) + k_f*std::pow(pwm_3,2)*(0.0270277492163122*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.0191115047510637*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.0731670031836881*std::cos(phi_3_1) + 0.00695555456514185*std::cos(phi_3_2) - 0.040539942895125)*(0.209445028587455*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.25*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.25*std::sin(phi_3_1) + 0.353553390593274*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.1481*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.1481*std::cos(phi_3_1) - 0.4069*std::cos(phi_3_2) + 0.4069);
        wrench_alloc.row(5) <<  k_f*std::pow(pwm_1,2)*(-0.5*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.5*std::sin(phi_1_1) - 0.707106781186547*std::sin(phi_1_2)*std::cos(phi_1_1))*(0.00983663959984971*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.00695555456514185*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.0266288337648413*std::cos(phi_1_1) - 0.0191115047510637*std::cos(phi_1_2) + 0.229040012685816) + k_f*std::pow(pwm_1,2)*(0.020337878845444*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.0778620870316996*std::sin(phi_1_1) + 0.0287621040931278*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.15073)*(0.241830519165799*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.171*std::cos(phi_1_1)*std::cos(phi_1_2) - 0.171*std::cos(phi_1_1) - 0.46985*std::cos(phi_1_2) + 0.46985) + k_f*std::pow(pwm_2,2)*(-0.209445028587455*std::sin(phi_2_1)*std::sin(phi_2_2) + 0.25*std::sin(phi_2_1)*std::cos(phi_2_2) + 0.25*std::sin(phi_2_1) + 0.353553390593274*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.1481*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.1481*std::cos(phi_2_1) + 0.4069*std::cos(phi_2_2) - 0.4069)*(-0.00491831979992485*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.0176126030801545*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.0674285673694518*std::sin(phi_2_1) - 0.0249079821446487*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.00347777728257093*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0133144168824206*std::cos(phi_2_1) + 0.0095547354815896*std::cos(phi_2_2) - 0.244639079450672) + k_f*std::pow(pwm_2,2)*(-0.1209152595829*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.433*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.433*std::sin(phi_2_1) - 0.61235447250755*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.0855*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.0855*std::cos(phi_2_1) + 0.2349*std::cos(phi_2_2) - 0.2349)*(0.00851933523238445*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.010168939422722*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.0389310435158498*std::sin(phi_2_1) - 0.0143810520465639*std::sin(phi_2_2)*std::cos(phi_2_1) - 0.00602407971402052*std::cos(phi_2_1)*std::cos(phi_2_2) - 0.0230627501787894*std::cos(phi_2_1) - 0.0165509658044223*std::cos(phi_2_2) + 0.127136098035242) + k_f*std::pow(pwm_3,2)*(-0.1209152595829*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.433*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.433*std::sin(phi_3_1) + 0.61235447250755*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.0855*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0855*std::cos(phi_3_1) + 0.2349*std::cos(phi_3_2) - 0.2349)*(-0.00851933523238445*std::sin(phi_3_1)*std::sin(phi_3_2) - 0.010168939422722*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.0389310435158498*std::sin(phi_3_1) - 0.0143810520465639*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.00602407971402052*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0230627501787894*std::cos(phi_3_1) + 0.0165509658044223*std::cos(phi_3_2) - 0.268166098035242) + k_f*std::pow(pwm_3,2)*(-0.00491831979992485*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.0176126030801545*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.0674285673694518*std::sin(phi_3_1) + 0.0249079821446487*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.00347777728257093*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.0133144168824206*std::cos(phi_3_1) + 0.0095547354815896*std::cos(phi_3_2) + 0.0116809205493283)*(0.209445028587455*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.25*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.25*std::sin(phi_3_1) + 0.353553390593274*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.1481*std::cos(phi_3_1)*std::cos(phi_3_2) - 0.1481*std::cos(phi_3_1) - 0.4069*std::cos(phi_3_2) + 0.4069);

    }
    else if (!drone_version){

        wrench_alloc.row(0) << k_f*std::pow(pwm_1, 2)*(-4.32978028117747e-17*std::sin(phi_1_1)*std::sin(phi_1_2) - 0.25*std::sin(phi_1_1)*std::cos(phi_1_2) - 0.25*std::sin(phi_1_1) - 0.353553390593274*std::sin(phi_1_2)*std::cos(phi_1_1) + 3.06161699786838e-17*std::cos(phi_1_1)*std::cos(phi_1_2) + 3.06161699786838e-17*std::cos(phi_1_1) + 0.433012701892219*std::cos(phi_1_2) - 0.433012701892219) + k_f*std::pow(pwm_2,2)*(-4.32978028117747e-17*std::sin(phi_2_1)*std::sin(phi_2_2) - 0.25*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.25*std::sin(phi_2_1) - 0.353553390593274*std::sin(phi_2_2)*std::cos(phi_2_1) + 3.06161699786838e-17*std::cos(phi_2_1)*std::cos(phi_2_2) + 3.06161699786838e-17*std::cos(phi_2_1) - 0.433012701892219*std::cos(phi_2_2) + 0.433012701892219) + k_f*std::pow(pwm_3,2)*(-4.32978028117747e-17*std::sin(phi_3_1)*std::sin(phi_3_2) + 0.433012701892219*std::sin(phi_3_1)*std::cos(phi_3_2) + 0.433012701892219*std::sin(phi_3_1) + 0.612372435695794*std::sin(phi_3_2)*std::cos(phi_3_1) + 3.06161699786838e-17*std::cos(phi_3_1)*std::cos(phi_3_2) + 3.06161699786838e-17*std::cos(phi_3_1) - 0.25*std::cos(phi_3_2) + 0.25);
        wrench_alloc.row(1) << k_f*std::pow(pwm_1,2)*(0.433012701892219*std::sin(phi_1_1)*std::cos(phi_1_2) + 0.433012701892219*std::sin(phi_1_1) + 0.612372435695794*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.25*std::cos(phi_1_2) - 0.25) + k_f*std::pow(pwm_2,2)*(-0.433012701892219*std::sin(phi_2_1)*std::cos(phi_2_2) - 0.433012701892219*std::sin(phi_2_1) - 0.612372435695794*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.25*std::cos(phi_2_2) - 0.25) + k_f*pow(pwm_3,2)*(-0.25*std::sin(phi_3_1)*std::cos(phi_3_2) - 0.25*std::sin(phi_3_1) - 0.353553390593274*std::sin(phi_3_2)*std::cos(phi_3_1) - 0.433012701892219*std::cos(phi_3_2) + 0.433012701892219);
        wrench_alloc.row(2) << k_f*pow(pwm_1,2)*(-0.707106781186547*std::sin(phi_1_1)*std::sin(phi_1_2) + 1.53080849893419e-17*std::sin(phi_1_1)*std::cos(phi_1_2) + 1.53080849893419e-17*std::sin(phi_1_1) + 2.16489014058873e-17*std::sin(phi_1_2)*std::cos(phi_1_1) + 0.5*std::cos(phi_1_1)*std::cos(phi_1_2) + 0.5*std::cos(phi_1_1) - 2.65143809681227e-17*std::cos(phi_1_2) + 2.65143809681227e-17) + k_f*std::pow(pwm_2,2)*(-0.707106781186547*std::sin(phi_2_1)*std::sin(phi_2_2) + 1.53080849893419e-17*std::sin(phi_2_1)*std::cos(phi_2_2) + 1.53080849893419e-17*std::sin(phi_2_1) + 2.16489014058873e-17*std::sin(phi_2_2)*std::cos(phi_2_1) + 0.5*std::cos(phi_2_1)*std::cos(phi_2_2) + 0.5*std::cos(phi_2_1) + 2.65143809681227e-17*std::cos(phi_2_2) - 2.65143809681227e-17) + k_f*std::pow(pwm_3,2)*(-0.707106781186547*std::sin(phi_3_1)*std::sin(phi_3_2) - 2.65143809681227e-17*std::sin(phi_3_1)*std::cos(phi_3_2) - 2.65143809681227e-17*std::sin(phi_3_1) - 3.74969971630462e-17*std::sin(phi_3_2)*std::cos(phi_3_1) + 0.5*std::cos(phi_3_1)*std::cos(phi_3_2) + 0.5*std::cos(phi_3_1) + 1.53080849893419e-17*std::cos(phi_3_2) - 1.53080849893419e-17);

        //torques still need to be computed not in numerican form in python 
        wrench_alloc.row(3) << k_f*(-3.25421956153017e-18*std::pow(pwm_1,2)*std::sin(phi_1_1) - 4.77048955893622e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1) - 0.0134804982329429*std::pow(pwm_1,2)*std::sin(phi_1_2) - 1.73472347597681e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_2) - 5.2963073470649e-34*std::pow(pwm_1,2)*std::sin(phi_1_1 - 2*phi_1_2) + 4.76569421051138e-19*std::pow(pwm_1,2)*std::sin(phi_1_1 - phi_1_2) - 5.07873085990693e-18*std::pow(pwm_1,2)*std::sin(phi_1_1 + phi_1_2) + 1.78148519855819e-33*std::pow(pwm_1,2)*std::sin(phi_1_1 + 2*phi_1_2) - 4.33680868994202e-19*std::pow(pwm_1,2)*std::sin(2*phi_1_1 - 2*phi_1_2) + 3.46944695195361e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1 - phi_1_2) - 1.21430643318376e-17*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + phi_1_2) - 2.16840434497101e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + 2*phi_1_2) - 0.0265727192835998*std::pow(pwm_1,2)*std::cos(phi_1_1) + 5.89816045468591e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1) - 1.54074395550979e-33*std::pow(pwm_1,2)*std::cos(phi_1_2) - 1.44444745829043e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_2) - 4.33680868994202e-19*std::pow(pwm_1,2)*std::cos(phi_1_1 - 2*phi_1_2) + 0.00389148464179991*std::pow(pwm_1,2)*std::cos(phi_1_1 - phi_1_2) - 0.0414709846417999*std::pow(pwm_1,2)*std::cos(phi_1_1 + phi_1_2) + 4.33680868994202e-19*std::pow(pwm_1,2)*std::cos(phi_1_1 + 2*phi_1_2) - 7.22223729145213e-35*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - 2*phi_1_2) + 3.85185988877447e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - phi_1_2) - 8.66668474974256e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + phi_1_2) - 9.87039096498458e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + 2*phi_1_2) + 2.63611661138003e-33*std::pow(pwm_1,2) - 3.25421956153017e-18*std::pow(pwm_2,2)*std::sin(phi_2_1) + 4.77048955893622e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1) + 0.0134804982329429*std::pow(pwm_2,2)*std::sin(phi_2_2) + 1.73472347597681e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_2) - 5.2963073470649e-34*std::pow(pwm_2,2)*std::sin(phi_2_1 - 2*phi_2_2) + 4.76569421051138e-19*std::pow(pwm_2,2)*std::sin(phi_2_1 - phi_2_2) - 5.07873085990693e-18*std::pow(pwm_2,2)*std::sin(phi_2_1 + phi_2_2) + 1.78148519855819e-33*std::pow(pwm_2,2)*std::sin(phi_2_1 + 2*phi_2_2) + 4.33680868994202e-19*std::pow(pwm_2,2)*std::sin(2*phi_2_1 - 2*phi_2_2) - 3.46944695195361e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1 - phi_2_2) + 1.21430643318376e-17*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + phi_2_2) + 2.16840434497101e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.0265727192835998*std::pow(pwm_2,2)*std::cos(phi_2_1) - 5.89816045468591e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1) + 1.54074395550979e-33*std::pow(pwm_2,2)*std::cos(phi_2_2) + 1.44444745829043e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_2) - 4.33680868994202e-19*std::pow(pwm_2,2)*std::cos(phi_2_1 - 2*phi_2_2) + 0.00389148464179991*std::pow(pwm_2,2)*std::cos(phi_2_1 - phi_2_2) - 0.0414709846417999*std::pow(pwm_2,2)*std::cos(phi_2_1 + phi_2_2) + 4.33680868994202e-19*std::pow(pwm_2,2)*std::cos(phi_2_1 + 2*phi_2_2) + 7.22223729145213e-35*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - 2*phi_2_2) - 3.85185988877447e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - phi_2_2) + 8.66668474974256e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + phi_2_2) + 9.87039096498458e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + 2*phi_2_2) - 2.63611661138003e-33*std::pow(pwm_2,2) - 3.25421956153017e-18*std::pow(pwm_3,2)*std::sin(phi_3_1) + 3.25260651745651e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1) + 0.00778296928359987*std::pow(pwm_3,2)*std::sin(phi_3_2) + 2.60208521396521e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_2) - 4.81482486096809e-34*std::pow(pwm_3,2)*std::sin(phi_3_1 - 2*phi_3_2) + 4.76569421051139e-19*std::pow(pwm_3,2)*std::sin(phi_3_1 - phi_3_2) - 5.07873085990693e-18*std::pow(pwm_3,2)*std::sin(phi_3_1 + phi_3_2) - 7.70371977754894e-34*std::pow(pwm_3,2)*std::sin(phi_3_1 + 2*phi_3_2) - 5.20417042793042e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1 - phi_3_2) + 1.04083408558608e-17*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + phi_3_2) + 1.73472347597681e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + 2*phi_3_2) + 0.0460252998944602*std::pow(pwm_3,2)*std::cos(phi_3_1) + 2.28704180895984e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1) + 1.49259570690011e-33*std::pow(pwm_3,2)*std::cos(phi_3_2) - 5.05556610401649e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_2) + 8.67361737988404e-19*std::pow(pwm_3,2)*std::cos(phi_3_1 - 2*phi_3_2) - 0.00674024911647142*std::pow(pwm_3,2)*std::cos(phi_3_1 - phi_3_2) + 0.071829852439506*std::pow(pwm_3,2)*std::cos(phi_3_1 + phi_3_2) + 8.67361737988404e-19*std::pow(pwm_3,2)*std::cos(phi_3_1 + 2*phi_3_2) - 3.61111864572607e-35*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - 2*phi_3_2) + 1.20370621524202e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - phi_3_2) + 5.05556610401649e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + phi_3_2) + 4.45371299639548e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + 2*phi_3_2) - 2.25093062250258e-33*std::pow(pwm_3,2));
        wrench_alloc.row(4) << k_f*(-2.50370892770341e-33*std::pow(pwm_1,2)*std::sin(phi_1_1) - 3.25260651745651e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1) - 0.00778296928359987*std::pow(pwm_1,2)*std::sin(phi_1_2) - 2.60208521396521e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_2) + 2.88889491658085e-34*std::pow(pwm_1,2)*std::sin(phi_1_1 - 2*phi_1_2) + 1.63704045272915e-33*std::pow(pwm_1,2)*std::sin(phi_1_1 - phi_1_2) - 3.75556339155511e-33*std::pow(pwm_1,2)*std::sin(phi_1_1 + phi_1_2) - 9.62964972193618e-35*std::pow(pwm_1,2)*std::sin(phi_1_1 + 2*phi_1_2) + 5.20417042793042e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1 - phi_1_2) - 1.04083408558608e-17*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + phi_1_2) - 1.73472347597681e-18*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + 2*phi_1_2) + 0.0460252998944602*std::pow(pwm_1,2)*std::cos(phi_1_1) + 2.70833898429455e-33*std::pow(pwm_1,2)*std::cos(2*phi_1_1) + 2.3833383061792e-33*std::pow(pwm_1,2)*std::cos(phi_1_2) + 1.32407683676622e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_2) + 8.67361737988404e-19*std::pow(pwm_1,2)*std::cos(phi_1_1 - 2*phi_1_2) - 0.00674024911647142*std::pow(pwm_1,2)*std::cos(phi_1_1 - phi_1_2) + 0.071829852439506*std::pow(pwm_1,2)*std::cos(phi_1_1 + phi_1_2) + 8.67361737988404e-19*std::pow(pwm_1,2)*std::cos(phi_1_1 + 2*phi_1_2) - 2.34722711972194e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - 2*phi_1_2) + 4.45371299639548e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - phi_1_2) + 1.21574327739444e-33*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + phi_1_2) - 8.12501695288365e-34*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + 2*phi_1_2) + 1.9620411308445e-33*std::pow(pwm_1,2) + 2.50370892770341e-33*std::pow(pwm_2,2)*std::sin(phi_2_1) - 3.25260651745651e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1) - 0.00778296928359987*std::pow(pwm_2,2)*std::sin(phi_2_2) - 2.60208521396521e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_2) - 2.88889491658085e-34*std::pow(pwm_2,2)*std::sin(phi_2_1 - 2*phi_2_2) - 1.73333694994851e-33*std::pow(pwm_2,2)*std::sin(phi_2_1 - phi_2_2) + 3.65926689433575e-33*std::pow(pwm_2,2)*std::sin(phi_2_1 + phi_2_2) + 9.62964972193618e-35*std::pow(pwm_2,2)*std::sin(phi_2_1 + 2*phi_2_2) + 5.20417042793042e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1 - phi_2_2) - 1.04083408558608e-17*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + phi_2_2) - 1.73472347597681e-18*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + 2*phi_2_2) - 0.0460252998944602*std::pow(pwm_2,2)*std::cos(phi_2_1) + 2.70833898429455e-33*std::pow(pwm_2,2)*std::cos(2*phi_2_1) + 2.3833383061792e-33*std::pow(pwm_2,2)*std::cos(phi_2_2) + 1.32407683676622e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_2) - 8.67361737988404e-19*std::pow(pwm_2,2)*std::cos(phi_2_1 - 2*phi_2_2) + 0.00674024911647142*std::pow(pwm_2,2)*std::cos(phi_2_1 - phi_2_2) - 0.071829852439506*std::pow(pwm_2,2)*std::cos(phi_2_1 + phi_2_2) - 8.67361737988404e-19*std::pow(pwm_2,2)*std::cos(phi_2_1 + 2*phi_2_2) - 2.34722711972194e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - 2*phi_2_2) + 5.4166779685891e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - phi_2_2) + 1.11944678017508e-33*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + phi_2_2) - 8.12501695288365e-34*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + 2*phi_2_2) + 1.9620411308445e-33*std::pow(pwm_2,2) + 6.16297582203915e-33*std::pow(pwm_3,2)*std::sin(phi_3_1) + 4.77048955893622e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1) + 0.0134804982329429*std::pow(pwm_3,2)*std::sin(phi_3_2) + 1.73472347597681e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_2) + 3.85185988877447e-34*std::pow(pwm_3,2)*std::sin(phi_3_1 - 2*phi_3_2) - 2.21481943604532e-33*std::pow(pwm_3,2)*std::sin(phi_3_1 - phi_3_2) + 7.80001627476831e-33*std::pow(pwm_3,2)*std::sin(phi_3_1 + phi_3_2) - 1.92592994438724e-34*std::pow(pwm_3,2)*std::sin(phi_3_1 + 2*phi_3_2) + 4.33680868994202e-19*std::pow(pwm_3,2)*std::sin(2*phi_3_1 - 2*phi_3_2) - 3.46944695195361e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1 - phi_3_2) + 1.21430643318376e-17*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + phi_3_2) + 2.16840434497101e-18*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + 2*phi_3_2) - 0.0265727192835999*std::pow(pwm_3,2)*std::cos(phi_3_1) + 2.74445017075181e-33*std::pow(pwm_3,2)*std::cos(2*phi_3_1) - 8.18520226364575e-34*std::pow(pwm_3,2)*std::cos(phi_3_2) + 1.39629920968075e-33*std::pow(pwm_3,2)*std::cos(2*phi_3_2) - 4.33680868994202e-19*std::pow(pwm_3,2)*std::cos(phi_3_1 - 2*phi_3_2) + 0.00389148464179992*std::pow(pwm_3,2)*std::cos(phi_3_1 - phi_3_2) - 0.0414709846417999*std::pow(pwm_3,2)*std::cos(phi_3_1 + phi_3_2) + 4.33680868994202e-19*std::pow(pwm_3,2)*std::cos(phi_3_1 + 2*phi_3_2) - 3.73148926725027e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - 2*phi_3_2) + 1.10740971802266e-33*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - phi_3_2) + 1.87778169577755e-33*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + phi_3_2) + 5.89816045468591e-34*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + 2*phi_3_2) + 1.17963209093718e-33*std::pow(pwm_3,2));
        wrench_alloc.row(5) << k_f*(-0.0531454385671997*std::pow(pwm_1,2)*std::sin(phi_1_1) - 1.68518870133883e-33*std::pow(pwm_1,2)*std::sin(2*phi_1_1) + 8.25442450594252e-19*std::pow(pwm_1,2)*std::sin(phi_1_2) - 1.15555796663234e-33*std::pow(pwm_1,2)*std::sin(2*phi_1_2) - 2.16840434497101e-18*std::pow(pwm_1,2)*std::sin(phi_1_1 - 2*phi_1_2) + 0.00778296928359985*std::pow(pwm_1,2)*std::sin(phi_1_1 - phi_1_2) - 0.0829419692835998*std::pow(pwm_1,2)*std::sin(phi_1_1 + phi_1_2) + 2.16840434497101e-18*std::pow(pwm_1,2)*std::sin(phi_1_1 + 2*phi_1_2) + 2.40741243048404e-34*std::pow(pwm_1,2)*std::sin(2*phi_1_1 - 2*phi_1_2) - 5.2963073470649e-34*std::pow(pwm_1,2)*std::sin(2*phi_1_1 - phi_1_2) - 7.22223729145214e-34*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + phi_1_2) + 2.40741243048404e-34*std::pow(pwm_1,2)*std::sin(2*phi_1_1 + 2*phi_1_2) + 1.62710978076508e-18*std::pow(pwm_1,2)*std::cos(phi_1_1) + 6.50521303491303e-19*std::pow(pwm_1,2)*std::cos(2*phi_1_1) - 3.20923843055709e-17*std::pow(pwm_1,2)*std::cos(phi_1_2) - 3.03576608295941e-18*std::pow(pwm_1,2)*std::cos(2*phi_1_2) - 5.77778983316171e-34*std::pow(pwm_1,2)*std::cos(phi_1_1 - 2*phi_1_2) - 2.3828471052557e-19*std::pow(pwm_1,2)*std::cos(phi_1_1 - phi_1_2) + 2.53936542995346e-18*std::pow(pwm_1,2)*std::cos(phi_1_1 + phi_1_2) + 4.81482486096809e-35*std::pow(pwm_1,2)*std::cos(phi_1_1 + 2*phi_1_2) - 6.50521303491303e-19*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - 2*phi_1_2) + 3.03576608295941e-18*std::pow(pwm_1,2)*std::cos(2*phi_1_1 - phi_1_2) - 3.90312782094782e-18*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + phi_1_2) - 6.50521303491303e-19*std::pow(pwm_1,2)*std::cos(2*phi_1_1 + 2*phi_1_2) + 3.664603343001e-17*std::pow(pwm_1,2) - 0.0531454385671997*std::pow(pwm_2,2)*std::sin(phi_2_1) + 1.68518870133883e-33*std::pow(pwm_2,2)*std::sin(2*phi_2_1) - 8.25442450594252e-19*std::pow(pwm_2,2)*std::sin(phi_2_2) + 1.15555796663234e-33*std::pow(pwm_2,2)*std::sin(2*phi_2_2) - 2.16840434497101e-18*std::pow(pwm_2,2)*std::sin(phi_2_1 - 2*phi_2_2) + 0.00778296928359985*std::pow(pwm_2,2)*std::sin(phi_2_1 - phi_2_2) - 0.0829419692835998*std::pow(pwm_2,2)*std::sin(phi_2_1 + phi_2_2) + 2.16840434497101e-18*std::pow(pwm_2,2)*std::sin(phi_2_1 + 2*phi_2_2) - 2.40741243048404e-34*std::pow(pwm_2,2)*std::sin(2*phi_2_1 - 2*phi_2_2) + 5.2963073470649e-34*std::pow(pwm_2,2)*std::sin(2*phi_2_1 - phi_2_2) + 7.22223729145214e-34*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + phi_2_2) - 2.40741243048404e-34*std::pow(pwm_2,2)*std::sin(2*phi_2_1 + 2*phi_2_2) + 1.62710978076508e-18*std::pow(pwm_2,2)*std::cos(phi_2_1) - 6.50521303491303e-19*std::pow(pwm_2,2)*std::cos(2*phi_2_1) + 3.20923843055709e-17*std::pow(pwm_2,2)*std::cos(phi_2_2) + 3.03576608295941e-18*std::pow(pwm_2,2)*std::cos(2*phi_2_2) - 5.77778983316171e-34*std::pow(pwm_2,2)*std::cos(phi_2_1 - 2*phi_2_2) - 2.3828471052557e-19*std::pow(pwm_2,2)*std::cos(phi_2_1 - phi_2_2) + 2.53936542995346e-18*std::pow(pwm_2,2)*std::cos(phi_2_1 + phi_2_2) + 4.81482486096809e-35*std::pow(pwm_2,2)*std::cos(phi_2_1 + 2*phi_2_2) + 6.50521303491303e-19*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - 2*phi_2_2) - 3.03576608295941e-18*std::pow(pwm_2,2)*std::cos(2*phi_2_1 - phi_2_2) + 3.90312782094782e-18*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + phi_2_2) + 6.50521303491303e-19*std::pow(pwm_2,2)*std::cos(2*phi_2_1 + 2*phi_2_2) - 3.664603343001e-17*std::pow(pwm_2,2) - 0.0531454385671997*std::pow(pwm_3,2)*std::sin(phi_3_1) + 1.03518734510814e-33*std::pow(pwm_3,2)*std::sin(2*phi_3_1) - 4.76569421051136e-19*std::pow(pwm_3,2)*std::sin(phi_3_2) + 5.5370485901133e-34*std::pow(pwm_3,2)*std::sin(2*phi_3_2) - 2.16840434497101e-18*std::pow(pwm_3,2)*std::sin(phi_3_1 - 2*phi_3_2) + 0.00778296928359987*std::pow(pwm_3,2)*std::sin(phi_3_1 - phi_3_2) - 0.0829419692835998*std::pow(pwm_3,2)*std::sin(phi_3_1 + phi_3_2) + 2.16840434497101e-18*std::pow(pwm_3,2)*std::sin(phi_3_1 + 2*phi_3_2) - 1.44444745829043e-34*std::pow(pwm_3,2)*std::sin(2*phi_3_1 - 2*phi_3_2) + 5.2963073470649e-34*std::pow(pwm_3,2)*std::sin(2*phi_3_1 - phi_3_2) + 1.44444745829043e-34*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + phi_3_2) - 2.16667118743564e-34*std::pow(pwm_3,2)*std::sin(2*phi_3_1 + 2*phi_3_2) - 2.81823680977738e-18*std::pow(pwm_3,2)*std::cos(phi_3_1) - 6.50521303491303e-19*std::pow(pwm_3,2)*std::cos(2*phi_3_1) - 1.30104260698261e-17*std::pow(pwm_3,2)*std::cos(phi_3_2) + 3.03576608295941e-18*std::pow(pwm_3,2)*std::cos(2*phi_3_2) + 9.62964972193618e-34*std::pow(pwm_3,2)*std::cos(phi_3_1 - 2*phi_3_2) + 4.12721225297129e-19*std::pow(pwm_3,2)*std::cos(phi_3_1 - phi_3_2) - 4.39830994366339e-18*std::pow(pwm_3,2)*std::cos(phi_3_1 + phi_3_2) - 1.92592994438724e-34*std::pow(pwm_3,2)*std::cos(phi_3_1 + 2*phi_3_2) + 6.50521303491303e-19*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - 2*phi_3_2) - 3.03576608295941e-18*std::pow(pwm_3,2)*std::cos(2*phi_3_1 - phi_3_2) + 3.90312782094782e-18*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + phi_3_2) + 6.50521303491303e-19*std::pow(pwm_3,2)*std::cos(2*phi_3_1 + 2*phi_3_2) + 8.45677694538693e-18*std::pow(pwm_3,2));
    } 
    else{
        ROS_ERROR("invalid drone type");
    }
}

void AveroJerkAllocator::computeJerkCmd(){

    for (int i = 0; i<6; i++){
        w_dot(i) = params_.derivative_gain*(wrench_now(i) - wrench_alloc(i));
    }
}

void AveroJerkAllocator::saturateActCmd(const double sampling_time){
    //takes in current commands and checks if within saturation limits and if not saturates (scaling down with maximum)

    //saturate servo speeds
    double servo_overspeed = 1.0;
    // find highest commanded servo speed
    for (int i = 0; i < 6; ++i){
        double phi_dot_i = u_dot(i+3); 
        //check if the value is finite
        if (!std::isfinite(phi_dot_i)){
            ROS_ERROR_STREAM("servo speed " << i << " is not finite");
            u_dot(i+3) = 0.0;
        }

        //update servo_overspeed
        if(std::abs(phi_dot_i) / avero_jerk_allocator::max_servo_rate > servo_overspeed){
            servo_overspeed = std::abs(phi_dot_i) / avero_jerk_allocator::max_servo_rate;
            ROS_DEBUG_STREAM("servo " << i << " overspeed = " << servo_overspeed);

        }
    }
    // scale down u_dot by max servo_overspeed
    if(servo_overspeed > 1.0){
        u_dot = u_dot / servo_overspeed;
        ROS_DEBUG_STREAM("u_dot scaled down by servo_overspeed = " << servo_overspeed);
    }

    // respect EDF RPM bounds and saturate EDF accelerations
    double fan_overspeed = 1.0;
    for (int i = 0; i < 3; ++i){
        double omega_dot_i = u_dot(i); 
        //check if the value is finite
        if (!std::isfinite(omega_dot_i)){
            ROS_ERROR_STREAM("fan acceleration " << i << " is not finite");
            u_dot(i) = 0.0;
        }
      
        // adjust omega_dot to respect RPM limits 
        double lb = (avero_jerk_allocator::pwm_min - prev_u(i)) / sampling_time;
        double ub = (avero_jerk_allocator::pwm_max - prev_u(i)) / sampling_time;

        double rpm_limit_overspeed = std::max(omega_dot_i / lb, omega_dot_i / ub);
        double rpm_scaling_factor = std::max(1.0, rpm_limit_overspeed);
        if(rpm_scaling_factor > 1.0){
            u_dot(i) /= rpm_scaling_factor;
            ROS_DEBUG_STREAM("fan " << i << " acceleration reduced by " << rpm_scaling_factor << " to respect RPM limits");
        }
          
        //update fan_overspeed
        if(std::abs(omega_dot_i) / avero_jerk_allocator::max_pwm_rate > fan_overspeed){
            fan_overspeed = std::abs(omega_dot_i) / avero_jerk_allocator::max_pwm_rate;
            ROS_DEBUG_STREAM("fan " << i << " overspeed = " << fan_overspeed);
        }
    }
    // scale down u_dot by max fan_overspeed
    if(fan_overspeed > 1.0){
        u_dot = u_dot / fan_overspeed;
        ROS_DEBUG_STREAM("u_dot scaled down by fan_overspeed = " << fan_overspeed);
    }    
}

//deleted the moving average filter 
void AveroJerkAllocator::update_wrench(const Vector6d& wrench){
    prev_wrench = wrench_now;
    wrench_now = wrench;
}

Eigen::MatrixXd AveroJerkAllocator::computeWeightMatrix(){
    //!!!!!!! is not used anymore, weight matrix get's calculated in constructor!
    Eigen::MatrixXd weight_matrix = Eigen::MatrixXd::Zero(9, 9);
   
    // for (int i = 0; i < 3; i++) {
    //     weight_matrix(i, i) = w_pwm_c;
    // }

    // for (int i = 3; i < 9; i++) {
    //     weight_matrix(i, i) = w_phi1_c;
    // }
    return weight_matrix;
} 

void AveroJerkAllocator::compute_u(double sampling_time){
    Vector9d u_dot_optimal; 

    for (int i = 0; i<9; i++){
        if (i<3){
            u_dot_optimal(i) = optimal_pwm_gain*(params_.optimal_pwm - u(i));
            // DEBUGGING
            //u_dot_optimal(i) = 0;

        } else {
            u_dot_optimal(i) = 0;
        }
    }
    Matrix96d allocation_inv = (W*allocation_matrix.transpose() * (allocation_matrix*W*allocation_matrix.transpose() + D).inverse());
    u_dot = u_dot_optimal + allocation_inv * (w_dot - allocation_matrix * u_dot_optimal);
    

    saturateActCmd(sampling_time);
    u += u_dot * sampling_time;
    for (int i = 0; i<3; i++){
        if(u(i) > params_.pwm_max){
            u(i) = params_.pwm_max;
            ROS_WARN_STREAM("EDF " << i << " saturated to max");
        } else if (u(i) < params_.pwm_min){
            u(i) = params_.pwm_min;
            ROS_WARN_STREAM("EDF " << i << " saturated to min");
        }
    }

}

std::array<double, 9> AveroJerkAllocator::allocate(const Vector9d& omav_state, Vector6d& wrench) {
    //put condiction to check if initialized
    double sampling_time = params_.sampling_time;
    // ROS_INFO_STREAM("IS INITIALIZED << is_initialized" << is_initialized);
    if (is_initialized){
        prev_u = omav_state;
        // ROS_INFO_STREAM("OMAV STATE RECEIVED: " << omav_state);
        update_wrench(wrench); //get the desired wrench from the wrench controller 
        // ROS_INFO_STREAM("WRENCH RECEIVED: " << wrench);
        computeWrench(omav_state); //compute the wrench from the current state u (feedback wrench --> wrench_alloc)
        // ROS_INFO_STREAM("WRENCH ALLOC COMPUTED: " << wrench_alloc);
        computeJerkCmd();//compute the jerk command w_dot
        // ROS_INFO_STREAM("JERK CMD COMPUTED: " << w_dot);
        // ROS_INFO_STREAM("CURRENT U: " << u);      
        computeAllocationMatrix(omav_state); //compute the allocation matrix
        // ROS_INFO_STREAM("ALLOCATION MATRIX COMPUTED: " << allocation_matrix);
        compute_u(sampling_time);
        // ROS_INFO_STREAM("U COMPUTED: " << u);
        saturateActCmd(sampling_time); //saturate the actuation commands 
        // ROS_INFO_STREAM("U SATURATED: " << u);

        if(want_debug_print){
            printDebugInfo(omav_state);
        }



        //adapt to fit in the desired points array
        for (int i = 0; i<9; i++){
            desired_setpoints[i] = u(i);
        }

        return desired_setpoints;  
    } else {
        initialize(omav_state, wrench);
        ROS_INFO("ALLOCATOR INITIALIZED");
        // desired_setpoints;
        return desired_setpoints;
    } 

}


[[nodiscard]] bool AveroJerkAllocator::isInitialized() const {
    bool is_initialized = true;
    // is_initialized &= (prev_wrench.isZero() == false);
    is_initialized &= (wrench_alloc.isZero() == false);
    is_initialized &= (wrench_now.isZero() == false);
    return is_initialized;
}

void AveroJerkAllocator::initialize(const Vector9d& omav_state, const Vector6d& wrench){
    if (!isInitialized()){

        for (int i = 0; i<9; i++){
            if (i<3){
                u(i) = params_.pwm_min; //set the initial thrust as the minimum 
                desired_setpoints[i] = u(i);
            } else {
                u(i) = 0; // set the servos to zero
                desired_setpoints[i] = u(i);
            }
        }
        //TODO: think whether you need to set the initial wrench as the current wrench i don't think that it is necessary

        is_initialized = true;
        
    }


}

[[nodiscard]] bool AveroJerkAllocator::setAllocationParameters(const AveroJerkAllocatorParameters& params){
    params_ = params;
    return true;
}

void AveroJerkAllocator::printDebugInfo(const Vector9d& omav_state){
    std_msgs::Float64MultiArray u_msg;
    u_msg.data = {u(0), u(1), u(2), u(3), u(4), u(5), u(6), u(7), u(8)};
    u_pub.publish(u_msg);
    std_msgs::Float64MultiArray u_dot_msg;
    u_dot_msg.data = {u_dot(0), u_dot(1), u_dot(2), u_dot(3), u_dot(4), u_dot(5), u_dot(6), u_dot(7), u_dot(8)};
    u_dot_pub.publish(u_dot_msg);
    std_msgs::Float64MultiArray wrench_cmd_msg;
    wrench_cmd_msg.data = {wrench_now(0), wrench_now(1), wrench_now(2), wrench_now(3), wrench_now(4), wrench_now(5)};
    wrench_cmd_pub.publish(wrench_cmd_msg);
    std_msgs::Float64MultiArray wrench_alloc_msg;
    wrench_alloc_msg.data = {wrench_alloc(0), wrench_alloc(1), wrench_alloc(2), wrench_alloc(3), wrench_alloc(4), wrench_alloc(5)};
    wrench_alloc_pub.publish(wrench_alloc_msg);


    std_msgs::Float64MultiArray u_real_msg;
    u_msg.data = {u(0), u(1), u(2), omav_state(3), omav_state(4), omav_state(5), omav_state(6), omav_state(7), omav_state(8)};
    u_real_pub.publish(u_real_msg);

    //add here your other debuging messages and publishers
}



